package com.twad.repo;

import java.util.Date;
import java.util.List;
import java.util.Map;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;

import com.twad.entity.CheckData;
import com.twad.entity.RuralDevData;

import jakarta.transaction.Transactional;

public interface RuralDevRepository extends JpaRepository<RuralDevData,Long>{

	
	@Query(value="select count(*) from rd_transaction where receipt_date = :receiptDate  and status ='Y' ",nativeQuery=true)	
	int checkDate(Date receiptDate);

	@Modifying
	@Transactional
	@Query(value="update rd_transaction rd set status='N' where rd.receipt_date = :receiptDate and freezed='N'",nativeQuery=true)
	int cancelUpload(Date receiptDate);

	
	@Query(value=" SELECT ROW_NUMBER"
			+ "	( ) OVER ( ) AS sl_no,"
			+ "	office_name ,"
			+ "	beneficiary_name,"
			+ " sch_sno,  "
			+ "	rd.bill_sno,"
			+ "	receipt_amount,"
			+ "	receipt_date,"
			+ "	dmd.beneficiary_sno,"
			+ "	coalesce(wc_due,0) as wc_due, "
			+ "	coalesce(int_due,0) as int_due, "
			+ "	coalesce(maint_due,0) as maint_due, "
			+ "	coalesce(wc_coln,0) as wc_coln, "
			+ "	coalesce(int_coln,0) as int_coln, "
			+ "	coalesce(maint_coln,0) as maint_coln, "
			+ "	coalesce(wc_balance,0) as wc_balance,"
			+ "	coalesce(int_balance,0) as int_balance,"
			+ "	coalesce(maint_balance,0) as maint_balance"
			+ " FROM"
			+ "	rd_village_panchayat rd"
			+ "	LEFT JOIN ( SELECT bill_sno,office_id,  beneficiary_sno FROM pms_dcb_trn_bill_dmd ) dmd ON dmd.bill_sno = rd.bill_sno"
			+ "	LEFT JOIN pms_dcb_mst_beneficiary BEN ON BEN.beneficiary_sno = DMD.beneficiary_sno"
			+ "	LEFT JOIN com_mst_offices OFF ON OFF.office_id = DMD.OFFICE_ID "
			+ "	LEFT JOIN ("
			+ "	SELECT"
			+ "		beneficiary_sno,"
			+ " sch_sno, "
			+ "	SUM ( CASE WHEN wc_due > 0 THEN wc_due END ) wc_due,"
			+ "	SUM ( CASE WHEN int_due > 0 THEN int_due END ) int_due,"
			+ "	SUM ( CASE WHEN maint_due > 0 THEN maint_due END ) maint_due ,"
			+ "	"
			+ "	SUM ( CASE WHEN wc_due > 0 THEN wc_coln END ) wc_coln,"
			+ "	SUM ( CASE WHEN int_due > 0 THEN int_coln END ) int_coln,"
			+ "	SUM ( CASE WHEN maint_due > 0 THEN maint_coln END ) maint_coln ,"
			+ "	"
			+ "		SUM ( CASE WHEN wc_due > 0 THEN wc_due - wc_coln END ) wc_balance,"
			+ "	SUM ( CASE WHEN int_due > 0 THEN int_due - int_coln END ) int_balance,"
			+ "	SUM ( CASE WHEN maint_due > 0 THEN maint_due - maint_coln END ) maint_balance "
			+ " FROM"
			+ "	fas_rd_beneficiary_schemewise_balance "
			+ " GROUP BY"
			+ "	beneficiary_sno,"
			+ " sch_sno "
			+ "	) bal ON bal.beneficiary_sno = dmd.beneficiary_sno"
			+ " 	where receipt_date = :receiptDate;"
			+ "", nativeQuery=true)
	List<Map<String, Object>> generateReportByScheme(Date receiptDate);
	
	@Query(value=" SELECT ROW_NUMBER"
			+ "	( ) OVER ( ) AS sl_no,"
			+ "	office_name ,"
			+ "	beneficiary_name, "
			+ "	rd.bill_sno,"
			+ "	receipt_amount,"
			+ "	receipt_date,"
			+ "	dmd.beneficiary_sno,"
			+ "	coalesce(wc_due,0) as wc_due, "
			+ "	coalesce(int_due,0) as int_due, "
			+ "	coalesce(maint_due,0) as maint_due, "
			+ "	coalesce(wc_coln,0) as wc_coln, "
			+ "	coalesce(int_coln,0) as int_coln, "
			+ "	coalesce(maint_coln,0) as maint_coln, "
			+ "	coalesce(wc_balance,0) as wc_balance,"
			+ "	coalesce(int_balance,0) as int_balance,"
			+ "	coalesce(maint_balance,0) as maint_balance"
			+ " FROM"
			+ "	rd_village_panchayat rd"
			+ "	LEFT JOIN ( SELECT bill_sno,office_id,  beneficiary_sno FROM pms_dcb_trn_bill_dmd ) dmd ON dmd.bill_sno = rd.bill_sno"
			+ "	LEFT JOIN pms_dcb_mst_beneficiary BEN ON BEN.beneficiary_sno = DMD.beneficiary_sno"
			+ "	LEFT JOIN com_mst_offices OFF ON OFF.office_id = DMD.OFFICE_ID "
			+ "	LEFT JOIN ("
			+ "	SELECT"
			+ "		beneficiary_sno,"
			+ "	SUM (wc_due  ) wc_due,"
			+ "	SUM (  int_due  ) int_due,"
			+ "	SUM (   maint_due  ) maint_due ,"
			+ "	"
			+ "	SUM (   wc_coln  ) wc_coln,"
			+ "	SUM (   int_coln  ) int_coln,"
			+ "	SUM (   maint_coln  ) maint_coln ,"
			+ "	"
			+ "		SUM ( wc_due) - sum(wc_coln  ) wc_balance,"
			+ "	SUM (  int_due) - sum(int_coln  ) int_balance,"
			+ "	SUM (  maint_due) -sum( maint_coln  ) maint_balance "
			+ " FROM"
			+ "	fas_rd_beneficiary_schemewise_balance "
			+ " GROUP BY"
			+ "	beneficiary_sno "
			+ "	) bal ON bal.beneficiary_sno = dmd.beneficiary_sno"
			+ " 	where receipt_date = :receiptDate;"
			+ "", nativeQuery=true)
	List<Map<String, Object>> generateReportByBeneficiary(Date receiptDate);

	@Query(value="SELECT \n"
			+ "row_number() over(	order by reg. reg , reg.cir, reg.div)  as sl_no ,reg. reg as region_name , reg.cir as circle_name, reg.div as division_name ,\n"
			+ "DIS.district_name ,\n"
			+ "blk.block_name ,\n"
			+ "pch.panch_name as panchayat_name,\n"
			+ "OPT1.OFFICE_ID, OPT1.beneficiary_sno,\n"
			+ "ARREAR_WC ,Demand_wc, COLN_WC , ARREAR_WC + Demand_wc  - COLN_WC  as BALANCE_WC ,\n"
			+ "ARREAR_int ,Demand_int, COLN_int ,\n"
			+ "ARREAR_int + Demand_int  - COLN_int  as BALANCE_int,\n"
			+ "ARREAR_maint ,COLN_maint,  \n"
			+ "ARREAR_maint  - COLN_maint  as BALANCE_maint\n"
			+ "  FROM (\n"
			+ "\n"
			+ "\n"
			+ "SELECT\n"
			+ "	dmd.office_id ,\n"
			+ "	dmd.beneficiary_sno, \n"
			+ "			(( COALESCE ( ob_yester_yr_wc, 0 ) + COALESCE ( ob_cur_yr_wc, 0 )  ) - (	\n"
			+ "			COALESCE ( COLN_CUR_YR_WC, 0 ) + COALESCE ( COLN_YESTER_YR_WC, 0 )   - COALESCE ( ADD_CHARGES_WC, 0 ) + COALESCE ( MINUS_CHARGES_WC, 0 ) \n"
			+ "		)) AS ARREAR_WC,\n"
			+ "		coalesce(wc_mth_total,0) as Demand_wc ,\n"
			+ "						COALESCE(FAS_COLN_WC.AMOUNT,0) AS COLN_WC,\n"
			+ "						\n"
			+ "					( COALESCE ( ob_maint_charges, 0 ) ) AS ARREAR_MAINT , COALESCE(FAS_COLN_MAINT.AMOUNT,0) AS COLN_MAINT,\n"
			+ "						\n"
			+ "						\n"
			+ "\n"
			+ "		\n"
			+ "		\n"
			+ "					(( COALESCE ( ob_int_amt_wc, 0 )  ) - (	\n"
			+ "			COALESCE ( coln_int_wc, 0 )  - COALESCE ( ADD_CHARGES_INT, 0 ) + COALESCE ( MINUS_CHARGES_INT, 0 )\n"
			+ "		)) AS ARREAR_INT,\n"
			+ "				coalesce(dmd_int_for_mth_wc,0) as Demand_INT ,\n"
			+ "				COALESCE(FAS_COLN_INT.AMOUNT,0) AS COLN_INT\n"
			+ "\n"
			+ "FROM\n"
			+ "	pms_dcb_trn_bill_dmd dmd \n"
			+ "	\n"
			+ "	LEFT JOIN \n"
			+ "	\n"
			+ "	--WC \n"
			+ "	\n"
			+ "(	SELECT\n"
			+ "						office_id,\n"
			+ "						beneficiary_sno,\n"
			+ "						beneficiary_type_id_sub,\n"
			+ "						SUM ( amount ) AS amount \n"
			+ "					FROM\n"
			+ "						(\n"
			+ "						SELECT\n"
			+ "							total.office_id,\n"
			+ "							ben.beneficiary_type_id_sub,\n"
			+ "						CASE\n"
			+ "								\n"
			+ "								WHEN ben.beneficiary_type_id_sub = 1 THEN\n"
			+ "								ben.added_to_ben_sno ELSE ben.beneficiary_sno \n"
			+ "							END AS beneficiary_sno,\n"
			+ "							amount \n"
			+ "						FROM\n"
			+ "							(\n"
			+ "							SELECT\n"
			+ "								* \n"
			+ "							FROM\n"
			+ "								(\n"
			+ "								SELECT\n"
			+ "									office_id,\n"
			+ "									beneficiary_sno,\n"
			+ "									SUM ( amount ) AS amount \n"
			+ "								FROM\n"
			+ "									(\n"
			+ "									SELECT\n"
			+ "										pms_dcb_fas_receipt_view.receipt_no,\n"
			+ "										pms_dcb_fas_receipt_view.accounting_for_office_id AS office_id,\n"
			+ "										pms_dcb_fas_receipt_view.cashbook_year AS YEAR,\n"
			+ "										pms_dcb_fas_receipt_view.cashbook_month AS MONTH,\n"
			+ "										pms_dcb_fas_receipt_view.sub_ledger_type_code,\n"
			+ "										pms_dcb_fas_receipt_view.sub_ledger_code,\n"
			+ "										pms_dcb_fas_receipt_view.sch_type_id,\n"
			+ "										pms_dcb_fas_receipt_view.sch_sno,\n"
			+ "										pms_dcb_fas_receipt_view.beneficiary_name,\n"
			+ "										pms_dcb_fas_receipt_view.beneficiary_sno,\n"
			+ "										pms_dcb_fas_receipt_view.beneficiary_type_id_sub,\n"
			+ "										pms_dcb_fas_receipt_view.amount \n"
			+ "									FROM\n"
			+ "										pms_dcb_fas_receipt_view \n"
			+ "									WHERE\n"
			+ "										(\n"
			+ "											pms_dcb_fas_receipt_view.account_head_code = ANY (\n"
			+ "												ARRAY [ 782401 :: NUMERIC,\n"
			+ "												782402 :: NUMERIC,\n"
			+ "												782403 :: NUMERIC,\n"
			+ "												782404 :: NUMERIC,\n"
			+ "												782405 :: NUMERIC,\n"
			+ "												782406 :: NUMERIC,\n"
			+ "												782407 :: NUMERIC,\n"
			+ "												900108 :: NUMERIC,\n"
			+ "												900109 :: NUMERIC ] \n"
			+ "											) \n"
			+ "										) \n"
			+ "										AND cashbook_year = :demandYear \n"
			+ "										AND cashbook_month = :demandMonth\n"
			+ "									) opt1 \n"
			+ "								GROUP BY\n"
			+ "									office_id,\n"
			+ "									beneficiary_sno \n"
			+ "								) receipt UNION ALL\n"
			+ "							SELECT\n"
			+ "								* \n"
			+ "							FROM\n"
			+ "								(\n"
			+ "								SELECT\n"
			+ "									opt4.office_id :: NUMERIC AS office_id,\n"
			+ "									opt4.beneficiary_sno,\n"
			+ "									SUM ( opt4.amount ) AS amount \n"
			+ "								FROM\n"
			+ "									(\n"
			+ "									SELECT\n"
			+ "										pms_dcb_other_charges.office_id,\n"
			+ "										pms_dcb_other_charges.beneficiary_sno,\n"
			+ "										pms_dcb_other_charges.cashbook_year AS YEAR,\n"
			+ "										pms_dcb_other_charges.cashbook_month AS MONTH,\n"
			+ "										SUM (\n"
			+ "										COALESCE ( CASE WHEN pms_dcb_other_charges.cr_dr_indicator :: TEXT = 'CR' :: TEXT THEN pms_dcb_other_charges.amount ELSE NULL :: NUMERIC END, 0 :: NUMERIC ) \n"
			+ "						) AS amount \n"
			+ "					FROM\n"
			+ "						pms_dcb_other_charges \n"
			+ "					WHERE\n"
			+ "						( pms_dcb_other_charges.account_head_code IN ( SELECT DISTINCT pms_dcb_receipt_account_map.account_head_code FROM pms_dcb_receipt_account_map WHERE pms_dcb_receipt_account_map.collection_type =  7:: NUMERIC ) ) \n"
			+ "					GROUP BY\n"
			+ "						pms_dcb_other_charges.office_id,\n"
			+ "						pms_dcb_other_charges.beneficiary_sno,\n"
			+ "						pms_dcb_other_charges.cashbook_year,\n"
			+ "						pms_dcb_other_charges.cashbook_month \n"
			+ "					ORDER BY\n"
			+ "						pms_dcb_other_charges.office_id,\n"
			+ "						pms_dcb_other_charges.beneficiary_sno \n"
			+ "					) AS opt4 \n"
			+ "				WHERE\n"
			+ "					opt4.YEAR = :demandYear \n"
			+ "					AND opt4.MONTH = :demandMonth\n"
			+ "				GROUP BY\n"
			+ "					opt4.office_id,\n"
			+ "					opt4.beneficiary_sno \n"
			+ "					) adj \n"
			+ "					) total\n"
			+ "					LEFT JOIN pms_dcb_mst_beneficiary ben ON ben.beneficiary_sno = total.beneficiary_sno \n"
			+ "					) AS opt1 \n"
			+ "				GROUP BY\n"
			+ "					office_id,\n"
			+ "					beneficiary_sno,\n"
			+ "					beneficiary_type_id_sub \n"
			+ "				) FAS_COLN_WC ON  FAS_COLN_WC.office_id = dmd.office_id AND FAS_COLN_WC.beneficiary_sno = dmd.beneficiary_sno\n"
			+ "				\n"
			+ "				\n"
			+ "				--INT--\n"
			+ "		LEFT JOIN 		\n"
			+ "	(			SELECT\n"
			+ "		office_id,\n"
			+ "		beneficiary_sno,\n"
			+ "		beneficiary_type_id_sub,\n"
			+ "		SUM ( amount ) AS amount \n"
			+ "	FROM\n"
			+ "		(\n"
			+ "		SELECT\n"
			+ "			total.office_id,\n"
			+ "			ben.beneficiary_type_id_sub,\n"
			+ "		CASE\n"
			+ "				\n"
			+ "				WHEN ben.beneficiary_type_id_sub = 1 THEN\n"
			+ "				ben.added_to_ben_sno ELSE ben.beneficiary_sno \n"
			+ "			END AS beneficiary_sno,\n"
			+ "			amount \n"
			+ "		FROM\n"
			+ "			(\n"
			+ "			SELECT\n"
			+ "				* \n"
			+ "			FROM\n"
			+ "				(\n"
			+ "				SELECT\n"
			+ "					office_id,\n"
			+ "					beneficiary_sno,\n"
			+ "					SUM ( amount ) AS amount \n"
			+ "				FROM\n"
			+ "					(\n"
			+ "					SELECT\n"
			+ "						pms_dcb_fas_receipt_view.receipt_no,\n"
			+ "						pms_dcb_fas_receipt_view.accounting_for_office_id AS office_id,\n"
			+ "						pms_dcb_fas_receipt_view.cashbook_year AS YEAR,\n"
			+ "						pms_dcb_fas_receipt_view.cashbook_month AS MONTH,\n"
			+ "						pms_dcb_fas_receipt_view.sub_ledger_type_code,\n"
			+ "						pms_dcb_fas_receipt_view.sub_ledger_code,\n"
			+ "						pms_dcb_fas_receipt_view.sch_type_id,\n"
			+ "						pms_dcb_fas_receipt_view.sch_sno,\n"
			+ "						pms_dcb_fas_receipt_view.beneficiary_name,\n"
			+ "						pms_dcb_fas_receipt_view.beneficiary_sno,\n"
			+ "						pms_dcb_fas_receipt_view.beneficiary_type_id_sub,\n"
			+ "						pms_dcb_fas_receipt_view.amount \n"
			+ "					FROM\n"
			+ "						pms_dcb_fas_receipt_view \n"
			+ "					WHERE\n"
			+ "						( pms_dcb_fas_receipt_view.account_head_code = ANY ( ARRAY [ 120601 :: NUMERIC ] ) ) \n"
			+ "						AND cashbook_year = :demandYear \n"
			+ "						AND cashbook_month = :demandMonth  \n"
			+ "					) opt1 \n"
			+ "				GROUP BY\n"
			+ "					office_id,\n"
			+ "					beneficiary_sno \n"
			+ "				) receipt UNION ALL\n"
			+ "			SELECT\n"
			+ "				* \n"
			+ "			FROM\n"
			+ "				(\n"
			+ "				SELECT\n"
			+ "					opt4.office_id :: NUMERIC AS office_id,\n"
			+ "					opt4.beneficiary_sno,\n"
			+ "					SUM ( opt4.amount ) AS amount \n"
			+ "				FROM\n"
			+ "					(\n"
			+ "					SELECT\n"
			+ "						pms_dcb_other_charges.office_id,\n"
			+ "						pms_dcb_other_charges.beneficiary_sno,\n"
			+ "						pms_dcb_other_charges.cashbook_year AS YEAR,\n"
			+ "						pms_dcb_other_charges.cashbook_month AS MONTH,\n"
			+ "						SUM (\n"
			+ "						COALESCE ( CASE WHEN pms_dcb_other_charges.cr_dr_indicator :: TEXT = 'CR' :: TEXT THEN pms_dcb_other_charges.amount ELSE NULL :: NUMERIC END, 0 :: NUMERIC ) \n"
			+ "		) AS amount \n"
			+ "	FROM\n"
			+ "		pms_dcb_other_charges \n"
			+ "	WHERE\n"
			+ "		( pms_dcb_other_charges.account_head_code IN ( SELECT DISTINCT pms_dcb_receipt_account_map.account_head_code FROM pms_dcb_receipt_account_map WHERE pms_dcb_receipt_account_map.collection_type = 9 :: NUMERIC ) ) \n"
			+ "	GROUP BY\n"
			+ "		pms_dcb_other_charges.office_id,\n"
			+ "		pms_dcb_other_charges.beneficiary_sno,\n"
			+ "		pms_dcb_other_charges.cashbook_year,\n"
			+ "		pms_dcb_other_charges.cashbook_month \n"
			+ "	ORDER BY\n"
			+ "		pms_dcb_other_charges.office_id,\n"
			+ "		pms_dcb_other_charges.beneficiary_sno \n"
			+ "	) AS opt4 \n"
			+ "WHERE\n"
			+ "	opt4.YEAR = :demandYear  \n"
			+ "	AND opt4.MONTH =  :demandMonth \n"
			+ "GROUP BY\n"
			+ "	opt4.office_id,\n"
			+ "	opt4.beneficiary_sno \n"
			+ "	) adj \n"
			+ "	) total\n"
			+ "	LEFT JOIN pms_dcb_mst_beneficiary ben ON ben.beneficiary_sno = total.beneficiary_sno \n"
			+ "	) AS opt1 \n"
			+ "GROUP BY\n"
			+ "	office_id,\n"
			+ "	beneficiary_sno,\n"
			+ "	beneficiary_type_id_sub \n"
			+ ") FAS_COLN_INT ON  FAS_COLN_INT.office_id = dmd.office_id AND FAS_COLN_INT.beneficiary_sno = dmd.beneficiary_sno\n"
			+ "\n"
			+ "----maint---\n"
			+ "\n"
			+ "LEFT JOIN 		\n"
			+ "	(			SELECT\n"
			+ "		office_id,\n"
			+ "		beneficiary_sno,\n"
			+ "		beneficiary_type_id_sub,\n"
			+ "		SUM ( amount ) AS amount \n"
			+ "	FROM\n"
			+ "		(\n"
			+ "		SELECT\n"
			+ "			total.office_id,\n"
			+ "			ben.beneficiary_type_id_sub,\n"
			+ "		CASE\n"
			+ "				\n"
			+ "				WHEN ben.beneficiary_type_id_sub = 1 THEN\n"
			+ "				ben.added_to_ben_sno ELSE ben.beneficiary_sno \n"
			+ "			END AS beneficiary_sno,\n"
			+ "			amount \n"
			+ "		FROM\n"
			+ "			(\n"
			+ "			SELECT\n"
			+ "				* \n"
			+ "			FROM\n"
			+ "				(\n"
			+ "				SELECT\n"
			+ "					office_id,\n"
			+ "					beneficiary_sno,\n"
			+ "					SUM ( amount ) AS amount \n"
			+ "				FROM\n"
			+ "					(\n"
			+ "					SELECT\n"
			+ "						pms_dcb_fas_receipt_view.receipt_no,\n"
			+ "						pms_dcb_fas_receipt_view.accounting_for_office_id AS office_id,\n"
			+ "						pms_dcb_fas_receipt_view.cashbook_year AS YEAR,\n"
			+ "						pms_dcb_fas_receipt_view.cashbook_month AS MONTH,\n"
			+ "						pms_dcb_fas_receipt_view.sub_ledger_type_code,\n"
			+ "						pms_dcb_fas_receipt_view.sub_ledger_code,\n"
			+ "						pms_dcb_fas_receipt_view.sch_type_id,\n"
			+ "						pms_dcb_fas_receipt_view.sch_sno,\n"
			+ "						pms_dcb_fas_receipt_view.beneficiary_name,\n"
			+ "						pms_dcb_fas_receipt_view.beneficiary_sno,\n"
			+ "						pms_dcb_fas_receipt_view.beneficiary_type_id_sub,\n"
			+ "						pms_dcb_fas_receipt_view.amount \n"
			+ "					FROM\n"
			+ "						pms_dcb_fas_receipt_view \n"
			+ "					WHERE\n"
			+ "					( pms_dcb_fas_receipt_view.account_head_code in (\n"
			+ "										select\n"
			+ "											ACCOUNT_HEAD_CODE\n"
			+ "										from\n"
			+ "											PMS_DCB_RECEIPT_ACCOUNT_MAP\n"
			+ "										where\n"
			+ "											sch_type_id = 12\n"
			+ "											and ACTIVE_STATUS = 'L'\n"
			+ "											and collection_type = 8 ) ) \n"
			+ "						AND cashbook_year = :demandYear \n"
			+ "						AND cashbook_month = :demandMonth  \n"
			+ "					) opt1 \n"
			+ "				GROUP BY\n"
			+ "					office_id,\n"
			+ "					beneficiary_sno \n"
			+ "				) receipt UNION ALL\n"
			+ "			SELECT\n"
			+ "				* \n"
			+ "			FROM\n"
			+ "				(\n"
			+ "				SELECT\n"
			+ "					opt4.office_id :: NUMERIC AS office_id,\n"
			+ "					opt4.beneficiary_sno,\n"
			+ "					SUM ( opt4.amount ) AS amount \n"
			+ "				FROM\n"
			+ "					(\n"
			+ "					SELECT\n"
			+ "						pms_dcb_other_charges.office_id,\n"
			+ "						pms_dcb_other_charges.beneficiary_sno,\n"
			+ "						pms_dcb_other_charges.cashbook_year AS YEAR,\n"
			+ "						pms_dcb_other_charges.cashbook_month AS MONTH,\n"
			+ "						SUM (\n"
			+ "						COALESCE ( CASE WHEN pms_dcb_other_charges.cr_dr_indicator :: TEXT = 'CR' :: TEXT THEN pms_dcb_other_charges.amount ELSE NULL :: NUMERIC END, 0 :: NUMERIC ) \n"
			+ "		) AS amount \n"
			+ "	FROM\n"
			+ "		pms_dcb_other_charges \n"
			+ "	WHERE\n"
			+ "		( pms_dcb_other_charges.account_head_code IN ( SELECT DISTINCT pms_dcb_receipt_account_map.account_head_code FROM pms_dcb_receipt_account_map WHERE pms_dcb_receipt_account_map.collection_type = 8 :: NUMERIC ) ) \n"
			+ "	GROUP BY\n"
			+ "		pms_dcb_other_charges.office_id,\n"
			+ "		pms_dcb_other_charges.beneficiary_sno,\n"
			+ "		pms_dcb_other_charges.cashbook_year,\n"
			+ "		pms_dcb_other_charges.cashbook_month \n"
			+ "	ORDER BY\n"
			+ "		pms_dcb_other_charges.office_id,\n"
			+ "		pms_dcb_other_charges.beneficiary_sno \n"
			+ "	) AS opt4 \n"
			+ "WHERE\n"
			+ "	opt4.YEAR = :demandYear \n"
			+ "	AND opt4.MONTH =  :demandMonth \n"
			+ "GROUP BY\n"
			+ "	opt4.office_id,\n"
			+ "	opt4.beneficiary_sno \n"
			+ "	) adj \n"
			+ "	) total\n"
			+ "	LEFT JOIN pms_dcb_mst_beneficiary ben ON ben.beneficiary_sno = total.beneficiary_sno \n"
			+ "	) AS opt1 \n"
			+ "GROUP BY\n"
			+ "	office_id,\n"
			+ "	beneficiary_sno,\n"
			+ "	beneficiary_type_id_sub \n"
			+ ") FAS_COLN_MAINT ON  FAS_COLN_MAINT.office_id = dmd.office_id AND FAS_COLN_MAINT.beneficiary_sno = dmd.beneficiary_sno\n"
			+ "\n"
			+ "\n"
			+ "WHERE\n"
			+ "	bill_year = (:demandYear)-1 "
			+ "	AND bill_month = (:demandMonth)-1  "
			+ "	) AS OPT1\n"
			+ "	left join pms_dcb_mst_beneficiary ben on ben.beneficiary_sno = OPT1.beneficiary_sno\n"
			+ "	LEFT JOIN COM_MST_DISTRICTS DIS ON DIS.DISTRICT_CODE = BEN.DISTRICT_CODE\n"
			+ "	LEFT JOIN COM_MST_BLOCKS BLK ON BLK.BLOCK_SNO = BEN.BLOCK_SNO\n"
			+ "	LEFT JOIN COM_MST_PANCHAYATS PCH ON PCH.PANCH_SNO = BEN.VILLAGE_PANCHAYAT_SNO \n"
			+ "		LEFT JOIN REGION_CIR_DIV_VIEW REG ON REG.DIDID = OPT1.OFFICE_ID\n"
			+ "\n"
			+ "	where ben.beneficiary_type_id_sub = 6 \n"
			+ "	order by reg. reg , reg.cir, reg.div ",nativeQuery=true)

	List<Map<String, Object>> getDmdReport(int demandYear, int demandMonth);


	
	
	@Query(value="select * from rd_transaction where receipt_date = :receiptDate and freezed='Y' and status='Y'",nativeQuery=true)
	List<Map<String, Object>> getImportedData(Date receiptDate);

	

//	@Modifying
//	@Transactional
//	@Query(value ="insert into rd_transaction select rd.* from rd_village_panchayat rd where receipt_date = :receiptDate and freezed='N' and status='Y'",nativeQuery=true)
//	void transferData(Date receiptDate);


	
	

	

}
