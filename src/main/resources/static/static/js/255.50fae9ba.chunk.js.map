{"version":3,"file":"static/js/255.50fae9ba.chunk.js","mappings":"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","sources":["config/ServiceURL.js","pages/login/Login.js","tneb/dashboard.js","util/JWTUtil.js","util/APICall.js","util/localStorage.js"],"sourcesContent":["//var BASE_URL='http://172.168.0.66:8081/';\r\n//var BASE_URL='http://172.168.1.66:8081/';\r\n//var BASE_URL='http://162.240.109.231:8081/';\r\n\r\n//var BASE_URL='http://localhost:8081/';\r\n// /var AADHAR_BASE_URL='http://localhost:2305/';\r\n\r\nvar Mode = 1\r\n\r\n//PRODUCTION CONFIG\r\n//===========================================\r\nif (Mode === 1 || Mode === 2) var BASE_URL = '/twad_data_collection/employees/'\r\nelse if (Mode === 0) BASE_URL = 'http://localhost:8082/employees/'\r\n\r\n//var AADHAR_BASE_URL='http://162.240.109.231:2305/';\r\n\r\n// var BASE_URL1='http://172.168.0.33:8083/employees'\r\n\r\n//var BASE_URL='http://148.66.130.213:2306/';\r\n\r\nvar ServiceURL = {}\r\n\r\n//Login\r\n\r\nServiceURL.OfficeList = BASE_URL + 'dcb/offices'\r\nServiceURL.LoginDetails = BASE_URL + 'user/authenticateUser'\r\nServiceURL.meterDetails = BASE_URL + 'metre'\r\nServiceURL.meterDetailsHT = BASE_URL + 'metres'\r\nServiceURL.schemesList = BASE_URL + 'schemes'\r\nServiceURL.beneficiaryName = BASE_URL + 'beneficiary'\r\nServiceURL.saveMapMetres = BASE_URL + 'saveMapMetres'\r\nServiceURL.getReport = BASE_URL + 'getReport'\r\nServiceURL.metreType = BASE_URL + 'metreType'\r\nServiceURL.districtDetails = BASE_URL + 'beneficiary/type'\r\nServiceURL.beneficiaryNameDetails = BASE_URL + 'beneficiary/byType'\r\nServiceURL.panchayat = BASE_URL + 'panchayat/dropdown'\r\nServiceURL.getAllMapMetresLt = BASE_URL + 'getAllMapMetresLt'\r\nServiceURL.getDistrictDetails = BASE_URL + 'beneficiary/district'\r\nServiceURL.getBeneficiaryNameDetails = BASE_URL + 'beneficiary/district/block'\r\nServiceURL.chagePasswordDetails = BASE_URL + 'user/initailResetPassword'\r\nServiceURL.SecondReport = BASE_URL + 'SecondReport'\r\nServiceURL.Breakup = BASE_URL + 'MetreType/Breakup'\r\nServiceURL.schemesWise = BASE_URL + 'Consumption/Schemewise'\r\nServiceURL.officeList = BASE_URL + 'scheme/office'\r\nServiceURL.getEDCDetails = BASE_URL + 'scheme/getDetaild'\r\nServiceURL.sendApiData = BASE_URL + 'scheme/sendApiData'\r\n\r\nServiceURL.getApiData = BASE_URL + 'getPensionerDetails'\r\nServiceURL.saveApiData = BASE_URL + 'savePensionerDetails'\r\n\r\nServiceURL.ListDBT = BASE_URL + 'WelfareDeptService/listDBT'\r\n\r\nServiceURL.BankVerify = BASE_URL + 'Bank/BankVerify'\r\n\r\nServiceURL.SaveGrievance = BASE_URL + 'Grievance/SaveGrievance'\r\n\r\nServiceURL.GetAadhaarStatusAbstract =\r\n  BASE_URL + 'report/GetAadhaarStatusAbstract'\r\nServiceURL.GetAadhaarStatusDetailed =\r\n  BASE_URL + 'report/GetAadhaarStatusDetailed'\r\nServiceURL.GetAadhaarStatusAbstractAllOffices =\r\n  BASE_URL + 'report/GetAadhaarStatusAbstractAllOffices'\r\n\r\nmodule.exports = ServiceURL\r\n","import React, { useState, useEffect, useRef } from 'react'\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n  CHeader,\n  CDropdownMenu,\n  CDropdownToggle,\n  CDropdownItem,\n  CNavLink,\n  CHeaderNav,\n  CNavItem,\n  CHeaderToggler,\n  CHeaderBrand,\n  CDropdownDivider,\n  CCollapse,\n  CDropdown,\n  CImage\n\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport { BrowserRouter as Router, Routes, useNavigate, useLocation, Route, Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { decrement, login } from '../../auth/reducers/index'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport LocalStorage from '../../util/localStorage';\nimport '../../login.css'\nimport axios from 'axios';\nimport CallApi from '../../util/APICall'\n// import ServiceURL from '../configs/ServiceURL';\nimport ServiceURL from '../../config/ServiceURL';\n// import { useNavigate } from \"react-router-dom\";\nimport dashboard from 'src/tneb/dashboard';\nimport 'react-notifications/lib/notifications.css';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport logo from '../../assets/images/twad_logo.png';\nconst Login = () => {\n\n\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { state } = useLocation();\n  const dispatch = useDispatch()\n  let navigate = useNavigate()\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\n  const [error, setError] = useState('');\n  const [showOldPassword, setShowOldPassword] = useState(false);\n  const [showNewPassword, setShowNewPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [passwordChange, setPasswordChange] = useState(false);\n  const [loginClick, setLoginClick] = useState(true);\n  const userDetails = useSelector((state) => state.twad)\n  // let userData = state;\n\n  const chk_Login = (e, data) => {\n    const userData = {\n      userName: userName,\n      userPassword: password\n    }\n    let url = ServiceURL.LoginDetails\n    let ip = userData\n    let p = CallApi.callEndPoint(url, ip,)\n    p.then((result) => {\n      // console.log(result.user.isPasswordChanged, \"isPasswordChanged\")\n      const successMessage = result.message\n      \n      NotificationManager.success(successMessage, 'success')\n      if (result.user.isPasswordChanged === 0) {\n        console.log(\"hh\");\n        // navigate('/dashboard ', {})\n        // console.log(passwordChange,\"paaaa\");\n        setPasswordChange(true)\n        setLoginClick(false)\n        NotificationManager.info(\"Change Password \",)\n      }\n      else {\n\n        navigate('/pension', {})\n\n      }\n\n\n      dispatch(login({\n        userName: result.user.userName, roleId: result.user.roleId, userPassword: result.user.userPassword, employeeName: result.user.employeeName, regionId: result.user.office.regionId, regionName: result.user.office.regionName, circleId: result.user.office.circleId, circleName: result.user.office.circleName, officeId: result.user.office.officeId, officeName: result.user.office.officeName, officeLevelId: result.user.office.officeLevelId, isPassword: result.user.isPasswordChanged\n      },))\n    }).catch((error) => {\n      console.log(error, \"error\");\n      const errorMessage = error.response.data.message\n      console.log(errorMessage, \"errorMessage\");\n      NotificationManager.error(errorMessage, 'error',)\n    });\n\n  }\n\n  const handleChangeOldPassword = (e) => {\n    setOldPassword(e.target.value);\n    setError('');\n  };\n\n  const handleToggleShowOldPassword = () => {\n    setShowOldPassword(!showOldPassword);\n  };\n  const handleChangeNewPassword = (e) => {\n    setNewPassword(e.target.value);\n    setError('');\n  };\n\n  const handleChangeConfirmNewPassword = (e) => {\n    setConfirmNewPassword(e.target.value);\n    setError('');\n  };\n\n  const handleToggleShowNewPassword = () => {\n    setShowNewPassword(!showNewPassword);\n  };\n\n  const handleToggleShowConfirmPassword = () => {\n    setShowConfirmPassword(!showConfirmPassword);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (newPassword !== confirmNewPassword) {\n      setError('New passwords does not match');\n    } else {\n      // Passwords match, submit form or perform other actions\n      console.log('Old Password:', oldPassword);\n      console.log('New Password:', newPassword);\n    }\n\n  }\n\n  useEffect(() => {\n\n    //console.log(state)\n  });\n  const saveChangePassword = (e) => {\n    // Check if newPassword and confirmNewPassword are empty\n    if (!newPassword || !confirmNewPassword) {\n      setError('Please fill in both New Password and Confirm New Password fields');\n      return; // Exit the function early if fields are empty\n    }\n\n    // Check if newPassword and confirmNewPassword match\n    if (newPassword !== confirmNewPassword) {\n      setError('New passwords do not match');\n      return; // Exit the function early if passwords don't match\n    }\n\n    // Proceed with password change\n    let userName = userDetails.userName;\n    // let oldPassword = userDetails.userPassword;\n    const userData = {\n      userName: userName,\n      oldPassword: oldPassword,\n      userPassword: newPassword\n    };\n\n    let url = ServiceURL.chagePasswordDetails;\n    let ip = userData;\n    let p = CallApi.callEndPoint(url, ip);\n\n    p.then((result) => {\n      if (result.message) {\n        setPasswordChange(false);\n        setLoginClick(true);\n        NotificationManager.success(result.message, 'success');\n      }\n      // Handle success message\n      // const successMessage = result.message;\n      // NotificationManager.success(successMessage, 'success');\n    }).catch((error) => {\n      console.log(error.response.data.message, \"erroree\");\n      const errorMessage = error.response.data.message;\n      console.log(errorMessage, \"errorMessage\");\n      NotificationManager.error(errorMessage, 'error');\n    });\n    setOldPassword(\"\");\n    setNewPassword(\"\");\n    setConfirmNewPassword(\"\")\n  };\n\n  return (\n    <div>\n\n      {/* <CHeader> */}\n\n      <div className='row bg-white'>\n        <div className='col-md-2 py-3'>\n          <CImage\n            className=\"rounded mx-5\"\n            src={logo}\n            alt=\"slide 3\"\n            width={145}\n            height={145}\n          />\n        </div>\n        <div className='col-md-8 align-self-center '>\n          <h1 className='text-center textColor'>Tamil Nadu Water Supply and Drainage Board (TWAD)</h1>\n          <h2 className='text-center text-warning'>TWAD-Pension/FAMILY PENSION Details</h2>\n        </div>\n      </div>\n      {/* </CHeader> */}\n      <div className=\"bgcolor\" id='bg-color' >\n        {(loginClick &&\n          <CContainer >\n            <CRow className=\"justify-content-center mt-5\">\n              <CCol md={6}>\n                <CCardGroup>\n                  <CCard className=\"p-4\">\n                    <CCardBody>\n                      <CForm>\n                        <h2>{state} Login</h2>\n                        <p className=\"text-medium-emphasis\">Sign In to your account</p>\n                        <CInputGroup className=\"mb-3\">\n                          <CInputGroupText>\n                            <CIcon icon={cilUser} />\n                          </CInputGroupText>\n                          <CFormInput placeholder=\"Username\" autoComplete=\"username\" value={userName} onChange={(e) => setUserName(e.target.value)} />\n                        </CInputGroup>\n                        <CInputGroup className=\"mb-4\">\n                          <CInputGroupText>\n                            <CIcon icon={cilLockLocked} />\n                          </CInputGroupText>\n                          <CFormInput\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            autoComplete=\"current-password\"\n                            value={password} onChange={(e) => setPassword(e.target.value)}\n                          />\n                        </CInputGroup>\n                        <CRow>\n                          <CCol xs={6}>\n                            <CButton className=\"px-4 login_btn\" onClick={(e) => { chk_Login(e, 'chris') }}>\n                              Login\n                            </CButton>\n                          </CCol>\n                          <CCol xs={6} className=\"text-right\">\n                            <CButton color=\"\" className=\"px-0 d-none\">\n                              Forgot password?\n                            </CButton>\n                          </CCol>\n                        </CRow>\n                      </CForm>\n                    </CCardBody>\n                  </CCard>\n\n                </CCardGroup>\n              </CCol>\n            </CRow>\n\n          </CContainer>\n        )}\n        {/* <div> */}\n        {passwordChange && (\n          <CContainer>\n            <CRow className=\"justify-content-center mt-5\">\n              <CCol md={6}>\n                <CCardGroup>\n                  <CCard className=\"p-4\">\n                    <CCardBody>\n                      <CForm onSubmit={handleSubmit}>\n                        <h2>{state} Confirm password</h2>\n                        <div className=\"mb-3\">\n                          <label htmlFor=\"oldPassword\" className=\"form-label\">Old Password:</label>\n                          <div className=\"input-group\">\n                            <input\n                              type={showOldPassword ? \"text\" : \"password\"}\n                              className=\"form-control\"\n                              id=\"oldPassword\"\n                              value={oldPassword}\n                              onChange={handleChangeOldPassword}\n                            />\n                            <button\n                              className=\"btn btn-outline-secondary\"\n                              type=\"button\"\n                              onClick={handleToggleShowOldPassword}\n                            >\n                              {showOldPassword ? <FaEyeSlash /> : <FaEye />}\n                            </button>\n                          </div>\n                          {/* <p>{userDetails.userPassword}</p> */}\n                        </div>\n                        <div className=\"mb-3\">\n                          <label htmlFor=\"newPassword\" className=\"form-label\">New Password:</label>\n                          <div className=\"input-group\">\n                            <input\n                              type={showNewPassword ? \"text\" : \"password\"}\n                              className=\"form-control\"\n                              id=\"newPassword\"\n                              value={newPassword}\n                              onChange={handleChangeNewPassword}\n                            />\n                            <button\n                              className=\"btn btn-outline-secondary\"\n                              type=\"button\"\n                              onClick={handleToggleShowNewPassword}\n                            >\n                              {showNewPassword ? <FaEyeSlash /> : <FaEye />}\n                            </button>\n                          </div>\n                        </div>\n                        <div className=\"mb-3\">\n                          <label htmlFor=\"confirmNewPassword\" className=\"form-label\">Confirm New Password:</label>\n                          <div className=\"input-group\">\n                            <input\n                              type={showConfirmPassword ? \"text\" : \"password\"}\n                              className=\"form-control\"\n                              id=\"confirmNewPassword\"\n                              value={confirmNewPassword}\n                              onChange={handleChangeConfirmNewPassword}\n                            />\n                            <button\n                              className=\"btn btn-outline-secondary\"\n                              type=\"button\"\n                              onClick={handleToggleShowConfirmPassword}\n                            >\n                              {showConfirmPassword ? <FaEyeSlash /> : <FaEye />}\n                            </button>\n                          </div>\n                          {error && <div className=\"invalid-feedback d-block\">{error}</div>}\n                        </div>\n                        <div className=\"mb-3\">\n                          <button type=\"submit\" className=\"btn btn-primary col-12\" onClick={saveChangePassword}>Change Password</button>\n                        </div>\n                      </CForm>\n                    </CCardBody>\n                  </CCard>\n                </CCardGroup>\n              </CCol>\n            </CRow>\n          </CContainer>\n        )}\n        <NotificationContainer />\n\n\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, } from 'react-redux'\r\nimport {\r\n  CCol,\r\n  CWidgetStatsF,\r\n  CCard,\r\n  CCardBody,\r\n  CCardTitle,\r\n  CCardText,\r\n  CImage,\r\n  CRow,\r\n  CSpinner\r\n} from '@coreui/react';\r\n\r\nimport CIcon from '@coreui/icons-react'\r\nimport { cilChartPie } from '@coreui/icons';\r\nimport ServiceURL from '../config/ServiceURL';\r\nimport '../login.css'\r\nimport icon1 from '../assets/images/icons8-dashboard-48 (1).png'\r\nexport default function Dashboard() {\r\n  const [metre, setMetre] = useState({});\r\n  const data = useSelector((state) => state.twad)\r\n  const [showMessage, setShowMessage] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const timeout = setTimeout(() => {\r\n      setLoading(false);\r\n  }, 2000);\r\n\r\n    console.log(\"refress\");\r\n    const officeId = data.office.officeId || 5000;\r\n    const officeLevelId = data.office.officeLevelId\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ officeId: officeId ,officeLevelId:officeLevelId})\r\n    };\r\n\r\n\r\n    fetch(ServiceURL.meterDetails + \"/status\", requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => setMetre(data))\r\n      .catch(error => console.error('Error fetching data:', error));\r\n  return () => clearTimeout(timeout);\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n    {loading ? (\r\n      <div className=\"d-flex justify-content-center align-items-center\" style={{ height: '100vh' }}>\r\n        <CSpinner color=\"primary\" variant=\"grow\" />\r\n      </div>\r\n    ) : (\r\n      <>\r\n        <h3 className='mt-4'>LT Connection</h3>\r\n        <CRow className=\"neumorphic-row\">\r\n          <CCol xs={12} sm={6} md={4}>\r\n            <CWidgetStatsF\r\n              className=\"mb-3 text-white neumorphic-card\"\r\n              color=\"info\"\r\n              icon={<CIcon icon={cilChartPie} height={24} />}\r\n              title= \"No of LT Connections\" \r\n              // value={metre.filter(item => item.type_of_connection === \"LT\"||(item.type_of_connection === \"LT\"&&item.circle_id)).map(item => item.total)}\r\n\r\n              value={metre.reduce((tot, item) => {\r\n                if (item.type_of_connection === \"LT\"||(item.type_of_connection === \"LT\"&&item.circle_id)) {\r\n                  tot += item.total;\r\n                }\r\n                return tot;\r\n              }, 0)}\r\n              \r\n              \r\n            />\r\n          </CCol>\r\n          <CCol xs={12} sm={6} md={4}>\r\n            <CWidgetStatsF\r\n              className=\"mb-3 text-white neumorphic-card\"\r\n              color=\"success\"\r\n              icon={<CIcon icon={cilChartPie} height={24} />}\r\n              title=\"Mapped\"\r\n              value={metre.reduce((tot, item) => {\r\n                if (item.type_of_connection === \"LT\"||(item.type_of_connection === \"LT\"&&item.circle_id)) {\r\n                  tot += item.mapped;\r\n                }\r\n                return tot;\r\n              }, 0)}\r\n            />\r\n          </CCol>\r\n          <CCol xs={12} sm={6} md={4}>\r\n            <CWidgetStatsF\r\n              className=\"mb-3 text-white neumorphic-card\"\r\n              color=\"danger\"\r\n              icon={<CIcon icon={cilChartPie} height={24} />}\r\n              title=\"Not Mapped\"\r\n              value={metre.reduce((tot, item) => {\r\n                if (item.type_of_connection === \"LT\"||(item.type_of_connection === \"LT\"&&item.circle_id)) {\r\n                  tot += item.not_mapped;\r\n                }\r\n                return tot;\r\n              }, 0)}\r\n            />\r\n          </CCol>\r\n        </CRow>\r\n  \r\n        <h3 className='mt-4'>HT Connection</h3>\r\n        <CRow className=\"neumorphic-row\">\r\n          <CCol xs={12} sm={6} md={4}>\r\n            <CWidgetStatsF\r\n              className=\"mb-3 text-white neumorphic-card\"\r\n              color=\"info\"\r\n              icon={<CIcon icon={cilChartPie} height={24} />}\r\n              title=\"No of HT Connections\"\r\n              value={metre.reduce((tot, item) => {\r\n                if (item.type_of_connection === \"HT\"||(item.type_of_connection === \"HT\"&&item.circle_id)) {\r\n                  tot += item.total;\r\n                }\r\n                return tot;\r\n              }, 0)}\r\n            />\r\n          </CCol>\r\n          <CCol xs={12} sm={6} md={4}>\r\n            <CWidgetStatsF\r\n              className=\"mb-3 text-white neumorphic-card\"\r\n              color=\"success\"\r\n              icon={<CIcon icon={cilChartPie} height={24} />}\r\n              title=\"Mapped\"\r\n              value={metre.reduce((tot, item) => {\r\n                if (item.type_of_connection === \"HT\"||(item.type_of_connection === \"HT\"&&item.circle_id)) {\r\n                  tot += item.mapped;\r\n                }\r\n                return tot;\r\n              }, 0)}\r\n            />\r\n          </CCol>\r\n          <CCol xs={12} sm={6} md={4}>\r\n            <CWidgetStatsF\r\n              className=\"mb-3 text-white neumorphic-card\"\r\n              color=\"danger\"\r\n              icon={<CIcon icon={cilChartPie} height={24} />}\r\n              title=\"Not Mapped\"\r\n              value={metre.reduce((tot, item) => {\r\n                if (item.type_of_connection === \"HT\"||(item.type_of_connection === \"HT\"&&item.circle_id)) {\r\n                  tot += item.not_mapped;\r\n                }\r\n                return tot;\r\n              }, 0)}\r\n            />\r\n          </CCol>\r\n        </CRow>\r\n      </>\r\n    )}\r\n  </div>\r\n  \r\n  );\r\n}\r\n","\r\nimport * as jose from 'jose'\r\nvar JWTUtil={};\r\n\r\n\r\n\r\n\r\nJWTUtil.getJWT=async (ip) =>{\r\n    \r\n    const secret = new TextEncoder().encode(\r\n      'cc7e0d44fd473002f1c42167459001140ec6389b7353f8088f4d9a95f2f596f2',\r\n    )\r\n\r\n    let jwtProm=new Promise((resolve,reject)=>{ \r\n       \r\n            const token = new jose.SignJWT(ip ) // details to  encode in the token\r\n                .setProtectedHeader({ alg: 'HS256' }) // algorithm\r\n                .setIssuedAt()\r\n                .setIssuer('tnega:chris:issuer') // issuer\r\n                .setAudience('tnega:chris::audience') // audience\r\n                .setExpirationTime('2h') // token expiration time, e.g., \"1 day\"\r\n                .sign(secret); // secretKey generated from previous step\r\n            console.log(token); // log token to console\r\n        \r\n          resolve(token)\r\n\r\n     \r\n    } );\r\n    return jwtProm;\r\n  \r\n    \r\n\r\n /*\r\n     async function fetchJWTSign() {\r\n        try {\r\n\r\n            let jwtProm=new Promise((resolve,reject)=>{\r\n           \r\n                const jwt = new jose.SignJWT(ip)\r\n            .setProtectedHeader({ alg })\r\n            .setIssuedAt()\r\n            .setIssuer('tnega:chris:issuer')\r\n            .setAudience('tnega:chris::audience')\r\n            .setExpirationTime('2h')\r\n            .sign(secret)\r\n            resolve(jwt)\r\n               \r\n              });\r\n\r\n              return jwtProm;\r\n             /* jwtProm.then((result)=>{\r\n    \r\n             console.log(result)\r\n             return result;\r\n                //setLoading(false);\r\n        \r\n        // / console.log(result)\r\n              });*/\r\n\r\n          //setData(data);\r\n       \r\n       \r\n      \r\n\r\n\r\n \r\n  \r\n\r\n\r\n/*      (async () => {\r\n        try {\r\n        const { payload, protectedHeader } = await jose.jwtVerify(jwt, secret, {\r\n          issuer: 'urn:example:issuer',\r\n          audience: 'urn:example:audience',\r\n        })\r\n        console.log(protectedHeader)\r\n    console.log(payload)\r\n      }catch(e){\r\n        console.error(e);\r\n        console.error('Token is invalid')\r\n      }\r\n    \r\n      })();*/\r\n \r\n\r\n\r\n \r\n}\r\n\r\n\r\nexport default JWTUtil;","import Axios from 'axios';\r\n\r\nimport JWTUtil from './JWTUtil'  ;\r\nvar CallApi={};\r\n\r\n\r\nCallApi.getJWT=(ip)=>{\r\n    \r\n}\r\n\r\nCallApi.callEndPoint=(url,ip,flag)=>{\r\n        let promise=new Promise((resolve,reject)=>{\r\n            console.log(flag)\r\n            if(flag!==undefined){\r\n            let p=JWTUtil.getJWT(ip)\r\n                 p.then((result)=>{\r\n                  console.log(result)\r\n                  Axios.post(url,{jwt:result} ).then(res => {\r\n                    // res.data;\r\n                     resolve(res.data)\r\n                 }).catch(err=>{\r\n                     reject(err);\r\n                 });\r\n                 });\r\n                }else{\r\n\r\n                    Axios.post(url,ip ).then(res => {\r\n                        // res.data;\r\n                         resolve(res.data)\r\n                     }).catch(err=>{\r\n                         reject(err);\r\n                     });\r\n\r\n                }\r\n           \r\n           \r\n           \r\n          });\r\n      return promise;\r\n      \r\n\r\n\r\n    \r\n\r\n}\r\n\r\n\r\nexport default CallApi;","\r\n\r\n\r\n\r\nvar LocalStorageUtil={};\r\n\r\nLocalStorageUtil.test=()=>{\r\n   // console.log('module called');\r\n}\r\n\r\nLocalStorageUtil.store_login=(data)=>{\r\n //   console.log(localStorage.setItem('login', JSON.stringify(data)));\r\n}\r\n\r\n\r\nLocalStorageUtil.get_login=()=>{\r\n    //console.log(localStorage.getItem('login'));\r\n    let opt={}\r\n    try{\r\n    opt=JSON.parse(localStorage.getItem('login'))\r\n    }catch(e){\r\n        opt.message=\"error\"\r\n    }\r\n    return opt;\r\n}\r\n\r\nLocalStorageUtil.remove_login=()=>{\r\n  //  console.log(localStorage.removeItem('login'));\r\n}\r\n\r\n\r\nLocalStorageUtil.clear=()=>{\r\n   // console.log(localStorage.clear());\r\n}\r\n\r\nexport default LocalStorageUtil;"],"names":["BASE_URL","ServiceURL","OfficeList","LoginDetails","meterDetails","meterDetailsHT","schemesList","beneficiaryName","saveMapMetres","getReport","metreType","districtDetails","beneficiaryNameDetails","panchayat","getAllMapMetresLt","getDistrictDetails","getBeneficiaryNameDetails","chagePasswordDetails","SecondReport","Breakup","schemesWise","officeList","getEDCDetails","sendApiData","getApiData","saveApiData","ListDBT","BankVerify","SaveGrievance","GetAadhaarStatusAbstract","GetAadhaarStatusDetailed","GetAadhaarStatusAbstractAllOffices","module","exports","Login","userName","setUserName","useState","password","setPassword","state","useLocation","dispatch","useDispatch","navigate","useNavigate","oldPassword","setOldPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","error","setError","showOldPassword","setShowOldPassword","showNewPassword","setShowNewPassword","showConfirmPassword","setShowConfirmPassword","passwordChange","setPasswordChange","loginClick","setLoginClick","userDetails","useSelector","twad","useEffect","_jsxs","children","className","_jsx","CImage","src","logo","alt","width","height","id","CContainer","CRow","CCol","md","CCardGroup","CCard","CCardBody","CForm","CInputGroup","CInputGroupText","CIcon","icon","cilUser","CFormInput","placeholder","autoComplete","value","onChange","e","target","cilLockLocked","type","xs","CButton","onClick","chk_Login","data","userData","userPassword","url","ip","CallApi","callEndPoint","then","result","successMessage","message","NotificationManager","success","user","isPasswordChanged","console","log","info","login","roleId","employeeName","regionId","office","regionName","circleId","circleName","officeId","officeName","officeLevelId","isPassword","catch","errorMessage","response","color","onSubmit","preventDefault","htmlFor","handleToggleShowOldPassword","FaEyeSlash","FaEye","handleToggleShowNewPassword","handleToggleShowConfirmPassword","NotificationContainer","Dashboard","metre","setMetre","showMessage","setShowMessage","loading","setLoading","timeout","setTimeout","requestOptions","method","headers","body","JSON","stringify","fetch","json","clearTimeout","style","CSpinner","variant","_Fragment","sm","CWidgetStatsF","cilChartPie","title","reduce","tot","item","type_of_connection","circle_id","total","mapped","not_mapped","JWTUtil","async","secret","TextEncoder","encode","Promise","resolve","reject","token","jose","setProtectedHeader","alg","setIssuedAt","setIssuer","setAudience","setExpirationTime","sign","flag","undefined","getJWT","Axios","post","jwt","res","err","LocalStorageUtil","opt","parse","localStorage","getItem"],"sourceRoot":""}