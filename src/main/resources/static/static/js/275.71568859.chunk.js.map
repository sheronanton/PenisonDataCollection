{"version":3,"file":"static/js/275.71568859.chunk.js","mappings":"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","sources":["tneb/DivisionWiseAbstract.js","tneb/Reports.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { use } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport ServiceURL from 'src/config/ServiceURL'\r\nimport CallApi from 'src/util/APICall'\r\nimport Reports from './Reports'\r\nimport * as XLSX from 'xlsx'\r\nimport { saveAs } from 'file-saver'\r\nimport ExcelJS from 'exceljs'\r\n\r\nconst DivisionWiseAbstract = () => {\r\n  const [rowData, setRowData] = React.useState([{}])\r\n  const [secondRowData, setSecondRowData] = React.useState([{}])\r\n  const officeId = useSelector((state) => state.twad.office.officeId)\r\n  const [open, setOpen] = React.useState('N')\r\n  const [pensionerType, setPensionerType] = React.useState('')\r\n  const [status, setStatus] = React.useState('')\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await CallApi.callEndPoint(\r\n          ServiceURL.GetAadhaarStatusAbstractAllOffices,\r\n          {},\r\n        )\r\n\r\n        setRowData(response)\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error)\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  const handleClick = async (\r\n    officeId,\r\n    pensionerTypeId,\r\n    status,\r\n    pensionerType,\r\n  ) => {\r\n    setOpen('Y')\r\n    setPensionerType(pensionerType)\r\n    setStatus(status)\r\n    try {\r\n      const response = await CallApi.callEndPoint(\r\n        ServiceURL.GetAadhaarStatusDetailed,\r\n        {\r\n          paymentOfficeId: officeId,\r\n          pensionerTypeId: pensionerTypeId,\r\n          status: status,\r\n        },\r\n      )\r\n\r\n      setSecondRowData(response)\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error)\r\n    }\r\n  }\r\n\r\n  const exportToExcel = async (data, fileName = 'Aadhaar_Status_Report') => {\r\n    const workbook = new ExcelJS.Workbook()\r\n    const worksheet = workbook.addWorksheet('Report')\r\n\r\n    const header = [\r\n      [\r\n        'S.No',\r\n        'Payment Office',\r\n        'Pensioners',\r\n        '',\r\n        'Family Pensioners',\r\n        '',\r\n        'Total',\r\n        '',\r\n      ],\r\n      [\r\n        '',\r\n        '',\r\n        'Updated',\r\n        'Not Updated',\r\n        'Updated',\r\n        'Not Updated',\r\n        'Updated',\r\n        'Not Updated',\r\n      ],\r\n    ]\r\n\r\n    const rows = data.map((item, index) => {\r\n      const totalUpdated =\r\n        Number(item.pensioners_updated || 0) +\r\n        Number(item.family_pensioners_updated || 0)\r\n      const totalNotUpdated =\r\n        Number(item.pensioners_not_updated || 0) +\r\n        Number(item.family_pensioners_not_updated || 0)\r\n\r\n      return [\r\n        index + 1,\r\n        item.payment_office_name,\r\n        Number(item.pensioners_updated || 0),\r\n        Number(item.pensioners_not_updated || 0),\r\n        Number(item.family_pensioners_updated || 0),\r\n        Number(item.family_pensioners_not_updated || 0),\r\n        totalUpdated,\r\n        totalNotUpdated,\r\n      ]\r\n    })\r\n\r\n    const totalRow = [\r\n      '',\r\n      'Total',\r\n      rows.reduce((sum, r) => sum + r[2], 0),\r\n      rows.reduce((sum, r) => sum + r[3], 0),\r\n      rows.reduce((sum, r) => sum + r[4], 0),\r\n      rows.reduce((sum, r) => sum + r[5], 0),\r\n      rows.reduce((sum, r) => sum + r[6], 0),\r\n      rows.reduce((sum, r) => sum + r[7], 0),\r\n    ]\r\n\r\n    const allRows = [...header, ...rows, totalRow]\r\n\r\n    allRows.forEach((row) => worksheet.addRow(row))\r\n\r\n    // Merge header cells\r\n    worksheet.mergeCells('A1:A2')\r\n    worksheet.mergeCells('B1:B2')\r\n    worksheet.mergeCells('C1:D1')\r\n    worksheet.mergeCells('E1:F1')\r\n    worksheet.mergeCells('G1:H1')\r\n\r\n    const lastRowIndex = allRows.length\r\n\r\n    // Apply borders, alignment, and bold header/total rows\r\n    worksheet.eachRow((row, rowNumber) => {\r\n      row.eachCell((cell) => {\r\n        cell.border = {\r\n          top: { style: 'thin' },\r\n          left: { style: 'thin' },\r\n          bottom: { style: 'thin' },\r\n          right: { style: 'thin' },\r\n        }\r\n        cell.alignment = { vertical: 'middle', horizontal: 'center' }\r\n\r\n        // Bold header rows (1 & 2) and total row\r\n        if (rowNumber <= 2 || rowNumber === lastRowIndex) {\r\n          cell.font = { bold: true }\r\n        }\r\n      })\r\n    })\r\n\r\n    // Auto-fit column widths\r\n    worksheet.columns.forEach((column) => {\r\n      let maxLength = 10\r\n      column.eachCell({ includeEmpty: true }, (cell) => {\r\n        const cellValue = cell.value ? cell.value.toString() : ''\r\n        maxLength = Math.max(maxLength, cellValue.length + 2)\r\n      })\r\n      column.width = maxLength\r\n    })\r\n\r\n    // Optional: freeze top 2 header rows\r\n    worksheet.views = [{ state: 'frozen', ySplit: 2 }]\r\n\r\n    const buffer = await workbook.xlsx.writeBuffer()\r\n    saveAs(new Blob([buffer]), `${fileName}.xlsx`)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h5 className=\"bg-primary text-white text-center p-1 rounded\">\r\n        STATUS REPORT\r\n      </h5>\r\n      <div className=\"text-end text-md-end mb-2\">\r\n        <button\r\n          className=\"btn btn-success mb-2\"\r\n          onClick={() => exportToExcel(rowData)}\r\n        >\r\n          Download Excel\r\n        </button>\r\n      </div>\r\n      {open === 'N' ? (\r\n        <>\r\n          {' '}\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-bordered table-striped rounded\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"bg-info text-white\" rowSpan=\"2\">\r\n                    S.No\r\n                  </th>\r\n                  <th\r\n                    className=\"bg-info text-white\"\r\n                    rowSpan=\"2\"\r\n                    style={{ textAlign: 'center' }}\r\n                  >\r\n                    Payment Office\r\n                  </th>\r\n\r\n                  <th\r\n                    className=\"bg-info text-white\"\r\n                    colSpan=\"2\"\r\n                    style={{ textAlign: 'center' }}\r\n                  >\r\n                    Pensioners\r\n                  </th>\r\n                  <th\r\n                    className=\"bg-info text-white\"\r\n                    colSpan=\"2\"\r\n                    style={{ textAlign: 'center' }}\r\n                  >\r\n                    Family Pensioners\r\n                  </th>\r\n                  <th\r\n                    className=\"bg-info text-white\"\r\n                    colSpan=\"2\"\r\n                    style={{ textAlign: 'center' }}\r\n                  >\r\n                    Total\r\n                  </th>\r\n                </tr>\r\n                <tr>\r\n                  <th className=\"bg-info text-white\">Updated</th>\r\n                  <th className=\"bg-info text-white\">Not Updated</th>\r\n\r\n                  <th className=\"bg-info text-white\">Updated</th>\r\n                  <th className=\"bg-info text-white\">Not Updated</th>\r\n\r\n                  <th className=\"bg-info text-white\">Updated</th>\r\n                  <th className=\"bg-info text-white\">Not Updated</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {rowData.map((item, index) => (\r\n                  <tr key={index}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{item.payment_office_name}</td>\r\n                    <td\r\n                      style={{ textAlign: 'center', cursor: 'pointer' }}\r\n                      onClick={() => {\r\n                        handleClick(\r\n                          item.payment_office_id,\r\n                          'P',\r\n                          'UPDATED',\r\n                          'Pensioner',\r\n                        )\r\n                      }}\r\n                    >\r\n                      {item.pensioners_updated}\r\n                    </td>\r\n                    <td\r\n                      style={{ textAlign: 'center', cursor: 'pointer' }}\r\n                      onClick={() => {\r\n                        handleClick(\r\n                          item.payment_office_id,\r\n                          'P',\r\n                          'NOT_UPDATED',\r\n                          'Pensioner',\r\n                        )\r\n                      }}\r\n                    >\r\n                      {item.pensioners_not_updated}\r\n                    </td>\r\n                    <td\r\n                      style={{ textAlign: 'center', cursor: 'pointer' }}\r\n                      onClick={() => {\r\n                        handleClick(\r\n                          item.payment_office_id,\r\n                          'F',\r\n                          'UPDATED',\r\n                          'Family Pensioner',\r\n                        )\r\n                      }}\r\n                    >\r\n                      {item.family_pensioners_updated}\r\n                    </td>\r\n                    <td\r\n                      style={{ textAlign: 'center', cursor: 'pointer' }}\r\n                      onClick={() => {\r\n                        handleClick(\r\n                          item.payment_office_id,\r\n                          'F',\r\n                          'NOT_UPDATED',\r\n                          'Family Pensioner',\r\n                        )\r\n                      }}\r\n                    >\r\n                      {item.family_pensioners_not_updated}\r\n                    </td>\r\n                    <td style={{ textAlign: 'center' }}>{item.updated}</td>\r\n                    <td style={{ textAlign: 'center' }}>{item.not_updated}</td>\r\n                    {/* <td\r\n                      onClick={() => {\r\n                        handleClick(\r\n                          item.payment_office_id,\r\n                          item.pensioner_type_id,\r\n                          'UPDATED',\r\n                          item.pensioner_type,\r\n                        )\r\n                      }}\r\n                      style={{ cursor: 'pointer', textAlign: 'center' }}\r\n                    >\r\n                      {item.updated}\r\n                    </td>\r\n\r\n                    <td\r\n                      onClick={() => {\r\n                        handleClick(\r\n                          item.payment_office_id,\r\n                          item.pensioner_type_id,\r\n                          'NOT_UPDATED',\r\n                          item.pensioner_type,\r\n                        )\r\n                      }}\r\n                      style={{ cursor: 'pointer', textAlign: 'center' }}\r\n                    >\r\n                      {item.not_updated}\r\n                    </td>\r\n                    <td style={{ cursor: 'pointer', textAlign: 'center' }}>\r\n                      {item.total}\r\n                    </td> */}\r\n                  </tr>\r\n                ))}\r\n\r\n                {/* total row */}\r\n                <tr style={{ fontWeight: 'bold', backgroundColor: '#f0f0f0' }}>\r\n                  <td colSpan={2} style={{ textAlign: 'center' }}>\r\n                    Total\r\n                  </td>\r\n                  <td style={{ textAlign: 'center' }}>\r\n                    {rowData.reduce(\r\n                      (sum, item) => sum + Number(item.pensioners_updated || 0),\r\n                      0,\r\n                    )}\r\n                  </td>\r\n                  <td style={{ textAlign: 'center' }}>\r\n                    {rowData.reduce(\r\n                      (sum, item) =>\r\n                        sum + Number(item.pensioners_not_updated || 0),\r\n                      0,\r\n                    )}\r\n                  </td>\r\n                  <td style={{ textAlign: 'center' }}>\r\n                    {rowData.reduce(\r\n                      (sum, item) =>\r\n                        sum + Number(item.family_pensioners_updated || 0),\r\n                      0,\r\n                    )}\r\n                  </td>\r\n                  <td style={{ textAlign: 'center' }}>\r\n                    {rowData.reduce(\r\n                      (sum, item) =>\r\n                        sum + Number(item.family_pensioners_not_updated || 0),\r\n                      0,\r\n                    )}\r\n                  </td>\r\n                  <td style={{ textAlign: 'center' }}>\r\n                    {rowData.reduce(\r\n                      (sum, item) => sum + Number(item.updated || 0),\r\n                      0,\r\n                    )}\r\n                  </td>\r\n                  <td style={{ textAlign: 'center' }}>\r\n                    {rowData.reduce(\r\n                      (sum, item) => sum + Number(item.not_updated || 0),\r\n                      0,\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          {secondRowData.length > 0 ? (\r\n            <>\r\n              <button\r\n                className=\"btn btn-primary text-white mb-2\"\r\n                onClick={() => {\r\n                  setOpen('N')\r\n                }}\r\n              >\r\n                Back\r\n              </button>\r\n\r\n              <Reports data={secondRowData} fileName=\"report\" />\r\n\r\n              <div className=\"text-center\">\r\n                <span className=\"text-info\">\r\n                  {pensionerType} - {status}\r\n                </span>\r\n              </div>\r\n              <div className=\"table-responsive\">\r\n                <table className=\"table table-bordered table-striped rounded\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"bg-info text-white\">S.No</th>\r\n                      <th className=\"bg-info text-white\">PPO No</th>\r\n                      <th className=\"bg-info text-white\">Name</th>\r\n                      <th className=\"bg-info text-white\">\r\n                        Original Aadhaar No\r\n                      </th>\r\n                      <th className=\"bg-info text-white\">Current Aadhaar No</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {secondRowData.map((item, index) => (\r\n                      <tr key={index}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{item.ppo_no}</td>\r\n                        <td>{item.name}</td>\r\n                        <td>{item.original_aadhaar_no}</td>\r\n                        <td>{item.current_aadhaar_no}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <span className=\"text-info\">No data Found</span> <br />\r\n              <button\r\n                className=\"btn btn-primary text-white mb-2\"\r\n                onClick={() => {\r\n                  setOpen('N')\r\n                }}\r\n              >\r\n                Back\r\n              </button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DivisionWiseAbstract\r\n","import React from 'react'\r\nimport { saveAs } from 'file-saver'\r\nimport * as XLSX from 'xlsx'\r\nimport { CButton } from '@coreui/react'\r\n\r\nconst Reports = ({ data, fileName }) => {\r\n  const exportToExcel = () => {\r\n    const worksheet = XLSX.utils.json_to_sheet(data)\r\n    const workbook = XLSX.utils.book_new()\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Sheet1')\r\n    const excelBuffer = XLSX.write(workbook, {\r\n      bookType: 'xlsx',\r\n      type: 'array',\r\n    })\r\n    const blob = new Blob([excelBuffer], { type: 'application/octet-stream' })\r\n    saveAs(blob, `${fileName}.xlsx`)\r\n  }\r\n\r\n  return (\r\n    // <button onClick={exportToExcel}>Export to Excel</button>\r\n    <CButton onClick={exportToExcel} color=\"warning\" className=\"rounded m-2\">\r\n      Export to Excel\r\n    </CButton>\r\n  )\r\n}\r\n\r\nexport default Reports\r\n"],"names":["DivisionWiseAbstract","rowData","setRowData","React","secondRowData","setSecondRowData","open","setOpen","useSelector","state","twad","office","officeId","pensionerType","setPensionerType","status","setStatus","useEffect","async","response","CallApi","callEndPoint","ServiceURL","error","console","fetchData","handleClick","pensionerTypeId","paymentOfficeId","_jsxs","children","_jsx","className","onClick","data","fileName","arguments","length","undefined","workbook","ExcelJS","worksheet","addWorksheet","rows","map","item","index","totalUpdated","Number","pensioners_updated","family_pensioners_updated","totalNotUpdated","pensioners_not_updated","family_pensioners_not_updated","payment_office_name","totalRow","reduce","sum","r","allRows","forEach","row","addRow","mergeCells","lastRowIndex","eachRow","rowNumber","eachCell","cell","border","top","style","left","bottom","right","alignment","vertical","horizontal","font","bold","columns","column","maxLength","includeEmpty","cellValue","value","toString","Math","max","width","views","ySplit","buffer","xlsx","writeBuffer","saveAs","Blob","concat","exportToExcel","_Fragment","rowSpan","textAlign","colSpan","cursor","payment_office_id","updated","not_updated","fontWeight","backgroundColor","Reports","ppo_no","name","original_aadhaar_no","current_aadhaar_no","_ref","CButton","XLSX","json_to_sheet","book_new","book_append_sheet","excelBuffer","bookType","type","blob","color"],"sourceRoot":""}