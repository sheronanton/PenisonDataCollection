{"version":3,"file":"static/js/469.c5db78ca.chunk.js","mappings":"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","sources":["tneb/PensionerFormDetails.js","tneb/Reports.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useState } from 'react'\r\n// import classNames  from 'classnames'\r\nimport {\r\n  CTable, CTableHead, CTableBody, CTableRow, CTableHeaderCell, CTableDataCell,\r\n  CButton, CModal, CModalHeader, CModalTitle, CModalBody, CModalFooter, CFormInput, CFormLabel,\r\n  CRow,\r\n  CCol,CFormCheck,CFormFeedback,CCardHeader,CButtonGroup\r\n} from '@coreui/react';\r\nimport ServiceURL from 'src/config/ServiceURL';\r\nimport CallApi from 'src/util/APICall';\r\nimport { useSelector } from 'react-redux';\r\nimport Reports from './Reports'\r\nimport validator from 'validator' \r\n// import validator as aa   dhaarvalidate from 'aadhaar-validator';\r\n\r\n\r\n\r\n\r\nconst PensionerFormDetails = () =>{\r\n  const [employees,setEmployees] = useState([]); \r\n  const [editModalVisible, setEditModalVisible] = useState(false);\r\n  const [selectedEmployee, setSelectedEmployee] = useState({});\r\n  const [validated, setValidated] = useState(false)\r\n  const [errors, setErrors] = useState({});\r\n  const [phoneNumber, setPhoneNumber] = useState(0);\r\n  const[aadharNumber,setAadharNumber]=useState(0);\r\n  const[email,setEmail]=useState('');\r\n  const[panNumber,setPanNumber]=useState(' ');\r\n  let [userData,setUserData]=useState({})\r\n  const [validPinCode1,setvalidPinCode1]=useState()\r\n  const[doj,setDOJ]=useState()\r\n  const[data,setData]=useState([])\r\n  const [typeOfPrensioner,setTypeOfPensioner] =useState('P')\r\n  const [isChecked,setIsChecked]= useState(false)\r\n  const [searchPpo,setSearchPpo]=useState('')\r\n  const [searchedData,setSearchedData]=useState({})\r\n  \r\n  const officeId=useSelector(state=>state.twad.office.officeId)\r\n\r\n\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    \r\n    // Validate mobile number (10 digits)\r\n    const mobileRegex = /^[0-9]{10}$/;\r\n    if (!mobileRegex.test(selectedEmployee.contactCell)) {\r\n      newErrors.phoneno = 'Mobile number must be 10 digits.';\r\n    }\r\n\r\n   // Validate Aadhaar number (12 digits)\r\n    const aadhaarRegex = /^[0-9]{12}$/;\r\n    if (!aadhaarRegex.test(selectedEmployee.aadharNumber)) {\r\n      newErrors.aadhaarno = 'Aadhaar number must be 12 digits.';\r\n    }\r\n    //Pan Validation\r\n    // const panRegex =/^[A-Z]{5}\\d{4}[A-Z]{1}$/;\r\n    // if(!panRegex.test(selectedEmployee.panNumber && !selectedEmployee.panNumber === \"\" && !selectedEmployee.panNumber === null)){\r\n    //   newErrors.panNo ='EX:ASDFG1234A'\r\n    // }\r\n   // Pin code validation\r\n    // const postRegax = /^[0-9]{6}$/;\r\n    // if (!postRegax.test(selectedEmployee.tempPinCode)) {\r\n    //   newErrors.tempPin = 'Invalid Pincode. Must be 6 digits.';\r\n    // }\r\n\r\n\r\n\r\n    //temp address validation\r\n    if(!selectedEmployee.tempDistrict || !selectedEmployee.tempDistrict.trim()){\r\n      newErrors.tempDistrict =\"Should be filled\"\r\n    }\r\n    if(!selectedEmployee.designation || !selectedEmployee.designation.trim()){\r\n      newErrors.designation =\"Should be filled\"\r\n    }\r\n    if(!selectedEmployee.tempAddressLine1 || !selectedEmployee.tempAddressLine1.trim()){\r\n      newErrors.tempAddressLine1 =\"Should be filled\"\r\n    }\r\n    if(!selectedEmployee.tempAddressLine2 || !selectedEmployee.tempAddressLine2.trim()){\r\n      newErrors.tempAddressLine2 =\"Should be filled\"\r\n    }\r\n    if(!selectedEmployee.tempAddressLine3 || !selectedEmployee.tempAddressLine3.trim()){\r\n      newErrors.tempAddressLine3 =\"Should be filled\"\r\n    }\r\n    \r\n    if(!selectedEmployee.tempState || !selectedEmployee.tempState.trim()){\r\n      newErrors.tempState =\"Should be filled\"\r\n    }\r\n    //temp address validation\r\n    if(!selectedEmployee.permanentDistrict || !selectedEmployee.permanentDistrict.trim()){\r\n      newErrors.permanentAddressLine1 =\"Should be filled6\"\r\n    }\r\n    if(!selectedEmployee.permanentAddressLine1 || !selectedEmployee.permanentAddressLine1.trim()){\r\n      newErrors.permanentAddressLine1 =\"Should be filled5\"\r\n    }\r\n    if(!selectedEmployee.permanentAddressLine2 || !selectedEmployee.permanentAddressLine2.trim()){\r\n      newErrors.permanentAddressLine2 =\"Should be filled4\"\r\n    }\r\n    if(!selectedEmployee.permanentAddressLine3 || !selectedEmployee.permanentAddressLine3.trim()){\r\n      newErrors.permanentAddressLine3 =\"Should be filled3\"\r\n    }\r\n    \r\n    \r\n    if(!selectedEmployee.permanentState || !selectedEmployee.permanentState.trim()){\r\n      newErrors.permanentState =\"Should be filled2\"\r\n    }\r\n    // if(!selectedEmployee.employeeId|| !selectedEmployee.employeeId.trim()){\r\n    //   newErrors.employeeId =\"Should be filled\"\r\n    // }\r\n    if(!selectedEmployee.employeeName|| !selectedEmployee.employeeName.trim()){\r\n      newErrors.employeeName =\"Should be filled1\"\r\n    }\r\n    \r\n\r\n    \r\n    setErrors(newErrors);\r\n    // console.log(newErrors)\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const  validatePhoneNumber = (value) => {\r\n    const isValidPhoneNumber = validator.isMobilePhone(value)\r\n    return (isValidPhoneNumber)\r\n  \r\n} \r\n\r\n \r\n  function handleEditClick(ppo_no) {\r\n    // Copy the selected employee's data\r\n    setErrors({});\r\n    setEditModalVisible(true);\r\n     const filteredEmployees = data.find((emp) => emp.ppoNo===ppo_no)  \r\n     setSelectedEmployee(filteredEmployees);\r\n     setEditModalVisible(true);\r\n     console.log(filteredEmployees)\r\n     setIsChecked(false)\r\n  };  \r\n\r\n  \r\n  function handleSearch (searchPpo){\r\n    // console.log(\"data\")\r\n    // console.log(searchPpo)\r\n  \r\n    const searchEmployees =data.find((emp) => emp.ppoNo===Number(searchPpo))\r\n    // setEmployees(searchEmployees)\r\n    console.log(searchEmployees)\r\n    if(searchEmployees !==undefined && searchEmployees !== null){\r\n      setSearchedData(searchEmployees)\r\n\r\n    }\r\n   \r\n  }\r\n  // console.log('test')\r\n  // console.log(Object.keys(searchedData).length )\r\n\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n      setSelectedEmployee((prev) => ({ ...prev, [name]: value }));\r\n   \r\n  };\r\n\r\n  const handleCheckboxChange = (e) => {\r\n    setIsChecked(e.target.checked);\r\n    // If unchecked, clear the input values\r\n    if (e.target.checked) {\r\n      setSelectedEmployee((prev) => ({ ...prev, [prev.permanentAddressLine1]:prev.tempAddressLine1 }));\r\n    }\r\n  };\r\n \r\n  const handleSave = (event) => {\r\n    console.log(errors)\r\n    if (validateForm()) {\r\n      console.log(selectedEmployee)\r\n      console.log(\"selectedEmployee\")\r\n  \r\n\r\n        // console.log(phoneNumber)\r\n       // setSelectedEmployee((prev) => ({ ...prev, contactCell: phoneNumber }));\r\n        let url = ServiceURL.saveApiData;\r\n        setEmployees((prevEmployees) =>\r\n          prevEmployees.map((emp) =>\r\n            emp.ppoNo === selectedEmployee.ppoNo ? { ...emp, ...selectedEmployee } : emp\r\n          ))\r\n   \r\n   const userData ={\r\n    pensionerDetailsEntity:selectedEmployee\r\n   }\r\n    let p = CallApi.callEndPoint(url, userData);\r\n    p.then((response) => {\r\n        console.log(response)\r\n        if(response.message === 'success'){\r\n          \r\n          setValidated(true)\r\n          setEditModalVisible(false);\r\n          setAadharNumber(0);\r\n          setPanNumber(' ');\r\n          setEmail('');\r\n          setSelectedEmployee({  });\r\n          setErrors({});\r\n          alert('Data updated Successfully');\r\n           \r\n        }\r\n        // else()\r\n        // setData(employees)\r\n    })\r\n\r\n      // setValidated(true)\r\n      // setEditModalVisible(false);\r\n      // setAadharNumber(0);\r\n      // setPanNumber(' ');\r\n      // setEmail('');\r\n      // setSelectedEmployee({  });\r\n      // setErrors({});\r\n       \r\n    // }\r\n\r\n   // } \r\n \r\n    }\r\n    // console.log(errors)\r\n    // console.log(selectedEmployee)\r\n    \r\n  }\r\n \r\n\r\n\r\n//  useEffect(() => {\r\n    \r\n//   setData(employees);\r\n  \r\n// },[employees,typeOfPrensioner]);\r\n\r\n\r\n  // const validatePhoneNumber = (number) => {\r\n  //   const regex = /^[1-9]\\d{9}$/; // Matches exactly 10 digits, starting with a non-zero\r\n  //   return regex.test(number);\r\n  // };\r\n\r\n\r\n\r\n\r\n\r\nfunction handleChange(input){\r\n\r\n    setTypeOfPensioner(input)\r\n  setSearchedData({})\r\n  \r\n    let url = ServiceURL.getApiData;\r\n   \r\n  \r\n        const userData1 = {\r\n            officeId:officeId,\r\n            pensionerType:input \r\n        } \r\n     \r\n    let p = CallApi.callEndPoint(url, userData1); \r\n    p.then((response) => { \r\n        // console.log(response) \r\n        setData(response)\r\n        setEmployees(response) \r\n\r\n    // setData(employees)\r\n    })\r\n    \r\n\r\n    // function dataCell(){\r\n    //     <>{data.map((emp)=>(setPhoneNumber(emp.contactCell)))}\r\n    //  </> \r\n    // }\r\n    // console.log(input)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className='ms-3'>\r\n    {/* <label>Pensioner</label> <input type='radio' onClick={()=>{handleChange('P')}}/>\r\n    <label>Family Pensioner</label> <input type='radio' onClick={()=>{handleChange('FP')}}/> */}\r\n    \r\n     <CRow>\r\n     <CButtonGroup role=\"group\" aria-label=\"Basic checkbox toggle button group\">\r\n      \r\n         <CFormCheck\r\n          type=\"radio\"\r\n          id=\"Pensioner\"\r\n          name=\"options\"\r\n          onClick={()=>{handleChange('P')}}\r\n          button={{ color: 'primary', variant: 'outline' }}\r\n          autoComplete=\"off\"\r\n          label=\"Pensioner\"\r\n        />\r\n        <CFormCheck\r\n          type=\"radio\"\r\n          id=\"FamilyPensioner\"\r\n          name=\"options\"\r\n          button={{ color: 'primary', variant: 'outline' }}\r\n          autoComplete=\"off\"\r\n          onClick={()=>{handleChange('FP')}}\r\n          label=\"Family Pensioner\"\r\n        />\r\n     \r\n        <CCol md={8}>\r\n          {typeOfPrensioner ==='FP'?<><Reports data={data} fileName=\"FamilyPensioner\" /></>:<><Reports data={data} fileName=\"Pensioner\" /></>}\r\n        </CCol>\r\n        </CButtonGroup>\r\n        </CRow>\r\n        \r\n        <CRow>\r\n          <CCol md={4}>\r\n          <CFormInput  className='m-2'  type='number'  id=\"ppoSearch\" name=\"contactCell\" placeholder='SEARCH BY PPO' onChange={(e)=>{setSearchPpo(e.target.value)}}/>\r\n          </CCol>\r\n          <CCol md={4}>\r\n            <CButton className='m-2' onClick={()=>{handleSearch(searchPpo)}} >Search</CButton>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow>\r\n          <CCol md={12}>\r\n          <CCardHeader>\r\n        {typeOfPrensioner ==='FP'?<><h5 className=\"text-center font-weight-bold\">FAMILY PENSIONER DATA</h5></>:<><h5 className=\"text-center font-weight-bold\">PENSION DATA</h5></>}\r\n      </CCardHeader>\r\n          </CCol>\r\n        </CRow>\r\n      <CTable hover>\r\n        <CTableHead>\r\n          <CTableRow>\r\n            <CTableHeaderCell scope=\"col\">Office ID</CTableHeaderCell>\r\n            <CTableHeaderCell scope=\"col\">PPO NO</CTableHeaderCell>\r\n            {typeOfPrensioner==='P'?<><CTableHeaderCell scope=\"col\">Pensioner Name</CTableHeaderCell></>:\r\n            <><CTableHeaderCell scope=\"col\">Family Pensioner Name</CTableHeaderCell></>\r\n            }\r\n            \r\n            <CTableHeaderCell scope=\"col\">Mobile No</CTableHeaderCell>\r\n            <CTableHeaderCell scope=\"col\">AADHAAR No</CTableHeaderCell>\r\n            <CTableHeaderCell scope=\"col\">Actions</CTableHeaderCell>\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n         {Object.keys(searchedData).length === 0 ?<> \r\n         {data.map((emp, index) => (\r\n            <CTableRow key={index}>\r\n              <CTableDataCell>{emp.officeId}</CTableDataCell>\r\n              <CTableDataCell>{emp.ppoNo}</CTableDataCell>\r\n              <CTableDataCell>{emp.pensionerName}</CTableDataCell>\r\n              <CTableDataCell>{emp.contactCell}</CTableDataCell>\r\n              <CTableDataCell>{emp.aadharNumber}</CTableDataCell>\r\n              <CTableDataCell>\r\n                <CButton color=\"primary\" onClick={()=>{ handleEditClick(emp.ppoNo)}}>Edit</CButton>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n          </>:<>\r\n            <CTableRow >\r\n              <CTableDataCell>{searchedData.officeId}</CTableDataCell>\r\n              <CTableDataCell>{searchedData.ppoNo}</CTableDataCell>\r\n              <CTableDataCell>{searchedData.pensionerName}</CTableDataCell>\r\n              <CTableDataCell>{searchedData.contactCell}</CTableDataCell>\r\n              <CTableDataCell>{searchedData.aadharNumber}</CTableDataCell>\r\n              <CTableDataCell>\r\n                <CButton color=\"primary\" onClick={()=>{ handleEditClick(searchedData.ppoNo)}}>Edit</CButton>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n         </>}\r\n           \r\n          \r\n        </CTableBody>\r\n      </CTable>\r\n\r\n     {/* <>   {selectedEmployee.map((emp, index) => ( */}\r\n        <CModal  backdrop ='static' visible={editModalVisible} onClose={() => setEditModalVisible(false)} size='xl'>\r\n          <CModalHeader>\r\n            {typeOfPrensioner==='P'?<><CModalTitle className=\"text-center w-100\"><strong>Edit Pensioner Details</strong></CModalTitle></>:\r\n            <><CModalTitle className=\"text-center w-100\"><strong>Edit Family Pensioner Details</strong></CModalTitle></>}\r\n          </CModalHeader>\r\n          <CModalBody>\r\n            <CRow>\r\n          {/* {console.log(selectedEmployee)} */}\r\n            <CCol md={6}>\r\n            <CFormLabel htmlFor=\"ppoNo\">PPO No</CFormLabel>\r\n            <CFormInput type=\"text\" id=\"ppoNo\" value={selectedEmployee.ppoNo}  disabled />\r\n            </CCol>\r\n\r\n            <CCol md={6}>\r\n            <CFormLabel htmlFor=\"pType\">Pension Type</CFormLabel>\r\n            <CFormInput type=\"text\" id=\"pType\" value={selectedEmployee.pensionerType} disabled />\r\n            </CCol>\r\n            {typeOfPrensioner ==='FP'?<><CModalTitle className=\"text-center mt-1 w-100\"><strong>Family Pensioner Details</strong></CModalTitle></>:<>\r\n              <><CModalTitle className=\"text-center mt-1 w-100\"><strong>Pensioner Details</strong></CModalTitle></>\r\n              </>}\r\n            </CRow>\r\n            <CRow>\r\n            <CCol md={10}>\r\n         \r\n            <CFormLabel htmlFor=\"empName\">Pensioner Name</CFormLabel>\r\n            <CFormInput type=\"text\" id=\"empName\" value={selectedEmployee.pensionerName} disabled />\r\n          \r\n            </CCol>\r\n\r\n            <CCol md={2}>\r\n            <CFormLabel htmlFor=\"empInital\">Initial</CFormLabel>\r\n            <CFormInput type=\"text\" id=\"empInital\" value={selectedEmployee.pensionerInitial} disabled />\r\n            </CCol>\r\n            </CRow>\r\n\r\n            \r\n\r\n            \r\n\r\n            {typeOfPrensioner ==='P'?<>\r\n            <CRow>\r\n            <CCol md={6}>\r\n            <CFormLabel htmlFor=\"gender\">Gender</CFormLabel>\r\n            <CFormInput type=\"text\" id=\"Gender\" value={selectedEmployee.gender} disabled />\r\n            </CCol>\r\n             <CCol md={6}>\r\n            <CFormLabel htmlFor=\"dor\">Date of Retirement </CFormLabel>\r\n            <CFormInput type=\"date\" id=\"dor\" name=\"dateOfRetirement\" value={selectedEmployee.dateOfRetirement} onChange={handleInputChange} disabled />\r\n            </CCol>\r\n\r\n            </CRow></>: <>\r\n            <CRow>\r\n            <CCol md={6}>\r\n            <CFormLabel htmlFor=\"gender\">Gender</CFormLabel>\r\n            <CFormInput type=\"text\" id=\"Gender\" value={selectedEmployee.gender} disabled />\r\n            </CCol>\r\n            <CCol md={6}>\r\n            <CFormLabel htmlFor=\"relation\">Relation</CFormLabel>\r\n            <CFormInput type=\"text\" id=\"relation\" value={selectedEmployee.relation} disabled />\r\n            </CCol>\r\n            </CRow>\r\n            </>}\r\n            <CRow>\r\n           {typeOfPrensioner==='P' ?<><CCol md={6}>\r\n            <CFormLabel htmlFor=\"grossPay\">Gross Pension</CFormLabel>\r\n            <CFormInput type=\"text\" id=\"grossPay\" value={selectedEmployee.grossPay} disabled />\r\n            </CCol>\r\n\r\n            <CCol md={6}>\r\n            <CFormLabel htmlFor=\"netPay\">Net Pension</CFormLabel>\r\n            <CFormInput type=\"text\" id=\"netPay\" value={selectedEmployee.netPay} disabled/>\r\n            </CCol></> :<></>}\r\n\r\n            </CRow> \r\n             <CRow>\r\n\r\n            <CCol md={6}>\r\n            <CFormLabel htmlFor=\"dob\">Date of Birth</CFormLabel>\r\n            <CFormInput type=\"date\" id=\"dob\" value={selectedEmployee.dateOfBirth} disabled />\r\n            </CCol>\r\n            {typeOfPrensioner==='P'?<>\r\n\r\n            <CCol md={6}>\r\n            <CFormLabel htmlFor=\"empID\">Employee Id</CFormLabel>\r\n            <CFormInput type=\"text\" id=\"empID\" name= 'employeeId' value={selectedEmployee.employeeId} onChange={handleInputChange} />\r\n            </CCol></>:<></>}\r\n\r\n            </CRow>\r\n            <CRow>\r\n            {typeOfPrensioner ==='FP'?<> <CModalTitle className=\"text-center w-100\"><strong>Employee Details</strong></CModalTitle></>:<></>}\r\n            </CRow>\r\n\r\n            {typeOfPrensioner ==='FP'?<>\r\n            <CRow>\r\n            <CCol md={6}>\r\n            <CFormLabel htmlFor=\"empID\">Employee Id</CFormLabel>\r\n            <CFormInput type=\"text\" id=\"empID\" name= 'employeeId'value={selectedEmployee.employeeId} onChange={handleInputChange} />\r\n            </CCol>\r\n            <CCol md={6}>\r\n            <CFormLabel htmlFor=\"empName\">Employee Name</CFormLabel>\r\n            <CFormInput type='text'  id=\"empName\" name=\"employeeName\" value={selectedEmployee.employeeName} onChange={handleInputChange}  invalid={!!errors.employeeName}\r\n              feedback={errors.employeeName}/>\r\n              </CCol>\r\n                </CRow> </>:<>\r\n                <CRow>\r\n            \r\n            {/* <CCol md={6}>\r\n            <CFormLabel htmlFor=\"empName\">Employee Name</CFormLabel>\r\n            <CFormInput type='text'  id=\"empName\" name=\"employeeName\" value={selectedEmployee.employeeName} disabled />\r\n              </CCol> */}\r\n                </CRow> </>}\r\n               \r\n            <CRow>\r\n            <CCol md={6}>\r\n            <CFormLabel htmlFor=\"designation\">Designation</CFormLabel>\r\n            <CFormInput type=\"text\" id=\"designation\" name=\"designation\" value={selectedEmployee.designation} onChange={handleInputChange} invalid={!!errors.designation}\r\n              feedback={errors.designation} />\r\n            </CCol>\r\n            <CCol md={6}>\r\n            {typeOfPrensioner ==='FP'?<><CFormLabel htmlFor=\"dateOfDeath\">Date of Death</CFormLabel>\r\n            <CFormInput type=\"date\" id=\"dateOfDeath\" name=\"dateOfDeath\" value={selectedEmployee.dateOfDeath} onChange={handleInputChange} /></>:<></>}\r\n                </CCol>\r\n                </CRow>\r\n\r\n            <CRow>\r\n            {typeOfPrensioner ==='FP'?<><CModalTitle className=\"text-center mt-1 w-100\"><strong>Family Pensioner Details</strong></CModalTitle></>:<></>}\r\n            <CCol md={6}>\r\n            <CFormLabel htmlFor=\"panno\">PAN NO</CFormLabel>\r\n            <CFormInput type=\"text\" id=\"panno\" name=\"panNumber\"   placeholder={validated?\"\":\"Valid Pan Num\"} value={selectedEmployee.panNumber} onChange={handleInputChange} invalid={!!errors.panNo}\r\n        feedback={errors.panNo}/>\r\n            </CCol>\r\n\r\n            <CCol md={6}>\r\n            \r\n            <CFormLabel htmlFor=\"aadhaarno\">AADHAAR NO</CFormLabel>\r\n            {/* <CFormInput type='number'maxLength=\"12\" id=\"aadhaarno\"  name=\"aadharNumber\" value={selectedEmployee.aadharNumber} onChange={(e)=>{setAadharNumber(e.target.value)}} /> */}\r\n            <CFormInput  type='text'maxLength=\"12\" id=\"aadhaarno\"  name=\"aadharNumber\" value={selectedEmployee.aadharNumber} onChange={handleInputChange}  invalid={!!errors.aadhaarno}\r\n        feedback={errors.aadhaarno}/>\r\n            </CCol>\r\n\r\n            </CRow>\r\n         \r\n             <CFormLabel htmlFor=\"mobileNo\">Mobile No</CFormLabel>\r\n            {/* <CFormInput  type='number'  id=\"mobileNo\" name=\"contactCell\" value={phoneNumber} onChange={(e)=>{setPhoneNumber(e.target.value)}} required  */}\r\n            <CFormInput  type='text'   id=\"mobileNo\" name=\"contactCell\" value={selectedEmployee.contactCell} onChange={handleInputChange} required \r\n              invalid={!!errors.phoneno}\r\n              feedback={errors.phoneno}/>\r\n\r\n\r\n            <CFormLabel htmlFor=\"email\">Email</CFormLabel>\r\n            <CFormInput type=\"email\" id=\"email\" name=\"emailId\" value={selectedEmployee.emailId} onChange={handleInputChange} required/>\r\n\r\n\r\n\r\n                 <CFormLabel className=\"text-center w-100 large-label className='fw-bold' \" htmlFor=\"input1\">\r\n                 <strong> Temporary Address</strong>\r\n            </CFormLabel>\r\n            <CRow>\r\n\r\n            <CCol md={6}>\r\n            <CFormLabel htmlFor=\"tempAddressLine1\">Address 1</CFormLabel>\r\n            <CFormInput type=\"text\" id=\"tempAddressLine1\" name=\"tempAddressLine1\"  value={selectedEmployee.tempAddressLine1}  onChange={handleInputChange} invalid={!!errors.tempAddressLine1}\r\n              feedback={errors.tempAddressLine1}  required/>\r\n            </CCol>\r\n            <CCol md={6}>\r\n            <CFormLabel htmlFor=\"tempAddressLine2\">Address 2</CFormLabel>\r\n            <CFormInput type=\"text\" id=\"tempAddressLine2\" name=\"tempAddressLine2\" value={selectedEmployee.tempAddressLine2} onChange={handleInputChange} required invalid={!!errors.tempAddressLine2}\r\n              feedback={errors.tempAddressLine2}/>\r\n            </CCol>\r\n            </CRow>\r\n            <CRow>\r\n\r\n            <CCol md={6}>\r\n            <CFormLabel htmlFor=\"tempAddressLine3\">Address 3</CFormLabel>\r\n            <CFormInput type=\"text\" id=\"tempAddressLine3\" name=\"tempAddressLine3\" value={selectedEmployee.tempAddressLine3} onChange={handleInputChange} invalid={!!errors.tempAddressLine3}\r\n              feedback={errors.tempAddressLine3} required/>\r\n            </CCol>\r\n            <CCol md={6}>\r\n            <CFormLabel htmlFor=\"tempPincode\">Postal Code</CFormLabel>\r\n            <CFormInput type=\"number\" id=\"tempPincode\" name=\"tempPincode\" value={selectedEmployee.tempPinCode} onChange={handleInputChange} invalid={!!errors.tempPin}\r\n              feedback={errors.tempPin} required/>\r\n            </CCol>\r\n            </CRow>\r\n\r\n            <CRow>\r\n\r\n<CCol md={6}>\r\n<CFormLabel htmlFor=\"tempDistrict\">District</CFormLabel>\r\n<CFormInput type=\"text\" id=\"tempDistrict\" name=\"tempDistrict\"  onChange={handleInputChange} value={selectedEmployee.tempDistrict} invalid={!!errors.tempDistrict}\r\n  feedback={errors.tempDistrict} required/>\r\n</CCol>\r\n<CCol md={6}>\r\n<CFormLabel htmlFor=\"tempState\">State</CFormLabel>\r\n<CFormInput type=\"text\" id=\"tempState\" name=\"tempState\"  onChange={handleInputChange} value={selectedEmployee.tempState} invalid={!!errors.tempState}\r\n  feedback={errors.tempState} required/>\r\n</CCol>\r\n</CRow>\r\n\r\n{/* <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={isChecked}\r\n            onChange={handleCheckboxChange}\r\n          />\r\n          {' '}Check to enable Input 1\r\n        </label> */}\r\n\r\n\r\n                 <CFormLabel className=\"text-center w-100 large-label className='fw-bold' \" htmlFor=\"input1\">\r\n                 <strong> Permanent Address</strong>\r\n            </CFormLabel>\r\n            <CRow>\r\n\r\n            <CCol md={6}>\r\n            <CFormLabel htmlFor=\"permanentAddressLine1\">Address 1</CFormLabel>\r\n            <CFormInput type=\"text\" id=\"permanentAddressLine1\" name=\"permanentAddressLine1\" value={selectedEmployee.permanentAddressLine1}  onChange={handleInputChange} invalid={!!errors.permanentAddressLine1}\r\n  feedback={errors.permanentAddressLine1}/>\r\n            </CCol>\r\n            <CCol md={6}>\r\n            <CFormLabel htmlFor=\"permanentAddressLine2\">Address 2</CFormLabel>\r\n            <CFormInput type=\"text\" id=\"permanentAddressLine2\" name=\"permanentAddressLine2\"  value={selectedEmployee.permanentAddressLine2} onChange={handleInputChange} required invalid={!!errors.permanentAddressLine2}\r\n  feedback={errors.permanentAddressLine2}/>\r\n            </CCol>\r\n            </CRow>\r\n            <CRow>\r\n\r\n            <CCol md={6}>\r\n            <CFormLabel htmlFor=\"permanentAddressLine3\">Address 3</CFormLabel>\r\n            <CFormInput type=\"text\" id=\"permanentAddressLine3\" name=\"permanentAddressLine3\"  value={selectedEmployee.permanentAddressLine3}  onChange={handleInputChange} required invalid={!!errors.permanentAddressLine3}\r\n  feedback={errors.permanentAddressLine3}/>\r\n            </CCol>\r\n            <CCol md={6}>\r\n            <CFormLabel htmlFor=\"permanentPincode\">Postal Code</CFormLabel>\r\n            <CFormInput type='number' id=\"permanentPincode\" name=\"permanentPincode\"  value={selectedEmployee.permanentPinCode} onChange={handleInputChange} required />\r\n            </CCol>\r\n            </CRow>\r\n            <CRow>\r\n\r\n<CCol md={6}>\r\n<CFormLabel htmlFor=\"permanentDistrict\">District</CFormLabel>\r\n<CFormInput type=\"text\" id=\"permanentDistrict\" name=\"permanentDistrict\"  value={selectedEmployee.permanentDistrict} onChange={handleInputChange} required invalid={!!errors.permanentDistrict}\r\n  feedback={errors.permanentDistrict}/> \r\n</CCol>\r\n<CCol md={6}>\r\n<CFormLabel htmlFor=\"permanentState\">State</CFormLabel>\r\n<CFormInput type=\"text\" id=\"permanentState\" name=\"permanentState\"  value={selectedEmployee.permanentState} onChange={handleInputChange} invalid={!!errors.permanentState}\r\n  feedback={errors.permanentState} required/>\r\n</CCol>\r\n</CRow>\r\n\r\n            \r\n\r\n          </CModalBody>\r\n          <CModalFooter>\r\n            <CButton color=\"secondary\" onClick={() => setEditModalVisible(false)}>\r\n              Cancel\r\n            </CButton>\r\n            <CButton color=\"primary\" onClick={handleSave}  noValidate\r\n            validated={validated} >\r\n              Save Changes\r\n            </CButton>\r\n          </CModalFooter>\r\n        </CModal>\r\n       </div>\r\n   \r\n   \r\n       \r\n  //  </>\r\n    \r\n  )\r\n\r\n\r\n}\r\nexport default PensionerFormDetails","import React from 'react';\r\nimport { saveAs } from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\nimport { CButton } from '@coreui/react';\r\n\r\nconst Reports = ({ data, fileName }) => {\r\n  const exportToExcel = () => {\r\n    const worksheet = XLSX.utils.json_to_sheet(data);\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Sheet1');\r\n    const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n    const blob = new Blob([excelBuffer], {type: 'application/octet-stream'});\r\n    saveAs(blob, `${fileName}.xlsx`);\r\n  };\r\n\r\n  return (\r\n    // <button onClick={exportToExcel}>Export to Excel</button>\r\n    <CButton onClick={exportToExcel} color='warning' className='rounded m-2'>Export to Excel</CButton>\r\n  );\r\n}\r\n\r\nexport default Reports;"],"names":["PensionerFormDetails","employees","setEmployees","useState","editModalVisible","setEditModalVisible","selectedEmployee","setSelectedEmployee","validated","setValidated","errors","setErrors","phoneNumber","setPhoneNumber","aadharNumber","setAadharNumber","email","setEmail","panNumber","setPanNumber","userData","setUserData","validPinCode1","setvalidPinCode1","doj","setDOJ","data","setData","typeOfPrensioner","setTypeOfPensioner","isChecked","setIsChecked","searchPpo","setSearchPpo","searchedData","setSearchedData","officeId","useSelector","state","twad","office","handleEditClick","ppo_no","filteredEmployees","find","emp","ppoNo","console","log","handleInputChange","e","name","value","target","prev","handleChange","input","url","ServiceURL","userData1","pensionerType","CallApi","callEndPoint","then","response","_jsxs","className","children","_jsx","CRow","CButtonGroup","role","CFormCheck","type","id","onClick","button","color","variant","autoComplete","label","CCol","md","_Fragment","Reports","fileName","CFormInput","placeholder","onChange","CButton","searchEmployees","Number","undefined","handleSearch","CCardHeader","CTable","hover","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","Object","keys","length","map","index","CTableDataCell","pensionerName","contactCell","CModal","backdrop","visible","onClose","size","CModalHeader","CModalTitle","CModalBody","CFormLabel","htmlFor","disabled","pensionerInitial","gender","dateOfRetirement","relation","grossPay","netPay","dateOfBirth","employeeId","employeeName","invalid","feedback","designation","dateOfDeath","panNo","maxLength","aadhaarno","required","phoneno","emailId","tempAddressLine1","tempAddressLine2","tempAddressLine3","tempPinCode","tempPin","tempDistrict","tempState","permanentAddressLine1","permanentAddressLine2","permanentAddressLine3","permanentPinCode","permanentDistrict","permanentState","CModalFooter","event","validateForm","newErrors","test","trim","prevEmployees","pensionerDetailsEntity","message","alert","noValidate","_ref","exportToExcel","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","excelBuffer","bookType","blob","Blob","saveAs","concat"],"sourceRoot":""}