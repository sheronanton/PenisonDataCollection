{"version":3,"file":"static/js/350.0c8b28ee.chunk.js","mappings":"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","sources":["tneb/AbstractReport.js","tneb/Reports.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { use } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport ServiceURL from 'src/config/ServiceURL'\r\nimport CallApi from 'src/util/APICall'\r\nimport Reports from './Reports'\r\n\r\nconst AbstractReport = () => {\r\n  const [rowData, setRowData] = React.useState([{}])\r\n  const [secondRowData, setSecondRowData] = React.useState([{}])\r\n  const officeId = useSelector((state) => state.twad.office.officeId)\r\n  const [open, setOpen] = React.useState('N')\r\n  const [pensionerType, setPensionerType] = React.useState('')\r\n  const [status, setStatus] = React.useState('')\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await CallApi.callEndPoint(\r\n          ServiceURL.GetAadhaarStatusAbstract,\r\n          { paymentOfficeId: officeId },\r\n        )\r\n\r\n        setRowData(response)\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error)\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  const handleClick = async (\r\n    officeId,\r\n    pensionerTypeId,\r\n    status,\r\n    pensionerType,\r\n  ) => {\r\n    setOpen('Y')\r\n    setPensionerType(pensionerType)\r\n    setStatus(status)\r\n    try {\r\n      const response = await CallApi.callEndPoint(\r\n        ServiceURL.GetAadhaarStatusDetailed,\r\n        {\r\n          paymentOfficeId: officeId,\r\n          pensionerTypeId: pensionerTypeId,\r\n          status: status,\r\n        },\r\n      )\r\n\r\n      setSecondRowData(response)\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h5 className=\"bg-primary text-white text-center p-1 rounded\">\r\n        STATUS REPORT\r\n      </h5>\r\n      {open === 'N' ? (\r\n        <>\r\n          {' '}\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-bordered table-striped rounded\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"bg-info text-white\">S.No</th>\r\n                  <th className=\"bg-info text-white\">Pensioner Type</th>\r\n                  <th className=\"bg-info text-white\">Updated</th>\r\n                  <th className=\"bg-info text-white\">\r\n                    Not Updated of Pensioners\r\n                  </th>\r\n                  <th className=\"bg-info text-white\">Total</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {rowData.map((item, index) => (\r\n                  <tr key={index}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{item.pensioner_type}</td>\r\n                    <td\r\n                      onClick={() => {\r\n                        handleClick(\r\n                          officeId,\r\n                          item.pensioner_type_id,\r\n                          'UPDATED',\r\n                          item.pensioner_type,\r\n                        )\r\n                      }}\r\n                      style={{ cursor: 'pointer', textAlign: 'center' }}\r\n                    >\r\n                      {item.updated}\r\n                    </td>\r\n                    <td\r\n                      onClick={() => {\r\n                        handleClick(\r\n                          officeId,\r\n                          item.pensioner_type_id,\r\n                          'NOT_UPDATED',\r\n                          item.pensioner_type,\r\n                        )\r\n                      }}\r\n                      style={{ cursor: 'pointer', textAlign: 'center' }}\r\n                    >\r\n                      {item.not_updated}\r\n                    </td>\r\n                    <td style={{ cursor: 'pointer', textAlign: 'center' }}>\r\n                      {item.total}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n                {/* total row */}\r\n                <tr style={{ fontWeight: 'bold', backgroundColor: '#f0f0f0' }}>\r\n                  <td colSpan={2} style={{ textAlign: 'center' }}>\r\n                    Total\r\n                  </td>\r\n                  <td style={{ textAlign: 'center' }}>\r\n                    {rowData.reduce(\r\n                      (sum, item) => sum + Number(item.updated || 0),\r\n                      0,\r\n                    )}\r\n                  </td>\r\n                  <td style={{ textAlign: 'center' }}>\r\n                    {rowData.reduce(\r\n                      (sum, item) => sum + Number(item.not_updated || 0),\r\n                      0,\r\n                    )}\r\n                  </td>\r\n                  <td style={{ textAlign: 'center' }}>\r\n                    {rowData.reduce(\r\n                      (sum, item) => sum + Number(item.total || 0),\r\n                      0,\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          {secondRowData.length > 0 ? (\r\n            <>\r\n              <button\r\n                className=\"btn btn-primary text-white mb-2\"\r\n                onClick={() => {\r\n                  setOpen('N')\r\n                }}\r\n              >\r\n                Back\r\n              </button>\r\n\r\n              <Reports data={secondRowData} fileName=\"report\" />\r\n\r\n              <div className=\"text-center\">\r\n                <span className=\"text-info\">\r\n                  {pensionerType} - {status}\r\n                </span>\r\n              </div>\r\n              <div className=\"table-responsive\">\r\n                <table className=\"table table-bordered table-striped rounded\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"bg-info text-white\">S.No</th>\r\n                      <th className=\"bg-info text-white\">PPO No</th>\r\n                      <th className=\"bg-info text-white\">Name</th>\r\n                      <th className=\"bg-info text-white\">\r\n                        Original Aadhaar No\r\n                      </th>\r\n                      <th className=\"bg-info text-white\">Current Aadhaar No</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {secondRowData.map((item, index) => (\r\n                      <tr key={index}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{item.ppo_no}</td>\r\n                        <td>{item.name}</td>\r\n                        <td>{item.original_aadhaar_no}</td>\r\n                        <td>{item.current_aadhaar_no}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <span className=\"text-info\">No data Found</span> <br />\r\n              <button\r\n                className=\"btn btn-primary text-white mb-2\"\r\n                onClick={() => {\r\n                  setOpen('N')\r\n                }}\r\n              >\r\n                Back\r\n              </button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AbstractReport\r\n","import React from 'react'\r\nimport { saveAs } from 'file-saver'\r\nimport * as XLSX from 'xlsx'\r\nimport { CButton } from '@coreui/react'\r\n\r\nconst Reports = ({ data, fileName }) => {\r\n  const exportToExcel = () => {\r\n    const worksheet = XLSX.utils.json_to_sheet(data)\r\n    const workbook = XLSX.utils.book_new()\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Sheet1')\r\n    const excelBuffer = XLSX.write(workbook, {\r\n      bookType: 'xlsx',\r\n      type: 'array',\r\n    })\r\n    const blob = new Blob([excelBuffer], { type: 'application/octet-stream' })\r\n    saveAs(blob, `${fileName}.xlsx`)\r\n  }\r\n\r\n  return (\r\n    // <button onClick={exportToExcel}>Export to Excel</button>\r\n    <CButton onClick={exportToExcel} color=\"warning\" className=\"rounded m-2\">\r\n      Export to Excel\r\n    </CButton>\r\n  )\r\n}\r\n\r\nexport default Reports\r\n"],"names":["AbstractReport","rowData","setRowData","React","secondRowData","setSecondRowData","officeId","useSelector","state","twad","office","open","setOpen","pensionerType","setPensionerType","status","setStatus","useEffect","async","response","CallApi","callEndPoint","ServiceURL","paymentOfficeId","error","console","fetchData","handleClick","pensionerTypeId","_jsxs","children","_jsx","className","_Fragment","map","item","index","pensioner_type","onClick","pensioner_type_id","style","cursor","textAlign","updated","not_updated","total","fontWeight","backgroundColor","colSpan","reduce","sum","Number","length","Reports","data","fileName","ppo_no","name","original_aadhaar_no","current_aadhaar_no","_ref","CButton","exportToExcel","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","excelBuffer","bookType","type","blob","Blob","saveAs","concat","color"],"sourceRoot":""}