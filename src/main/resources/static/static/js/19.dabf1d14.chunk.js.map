{"version":3,"file":"static/js/19.dabf1d14.chunk.js","mappings":"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","sources":["tneb/dashboard.js","../node_modules/@coreui/icons/js/free/cil-chart-pie.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector, } from 'react-redux'\r\nimport {\r\n  CCol,\r\n  CWidgetStatsF,\r\n  CCard,\r\n  CCardBody,\r\n  CCardTitle,\r\n  CCardText,\r\n  CImage,\r\n  CRow,\r\n  CSpinner\r\n} from '@coreui/react';\r\n\r\nimport CIcon from '@coreui/icons-react'\r\nimport { cilChartPie } from '@coreui/icons';\r\nimport ServiceURL from '../config/ServiceURL';\r\nimport '../login.css'\r\nimport icon1 from '../assets/images/icons8-dashboard-48 (1).png'\r\nexport default function Dashboard() {\r\n  const [metre, setMetre] = useState({});\r\n  const data = useSelector((state) => state.twad)\r\n  const [showMessage, setShowMessage] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const timeout = setTimeout(() => {\r\n      setLoading(false);\r\n  }, 2000);\r\n\r\n    console.log(\"refress\");\r\n    const officeId = data.office.officeId || 5000;\r\n    const officeLevelId = data.office.officeLevelId\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ officeId: officeId ,officeLevelId:officeLevelId})\r\n    };\r\n\r\n\r\n    fetch(ServiceURL.meterDetails + \"/status\", requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => setMetre(data))\r\n      .catch(error => console.error('Error fetching data:', error));\r\n  return () => clearTimeout(timeout);\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n    {loading ? (\r\n      <div className=\"d-flex justify-content-center align-items-center\" style={{ height: '100vh' }}>\r\n        <CSpinner color=\"primary\" variant=\"grow\" />\r\n      </div>\r\n    ) : (\r\n      <>\r\n        <h3 className='mt-4'>LT Connection</h3>\r\n        <CRow className=\"neumorphic-row\">\r\n          <CCol xs={12} sm={6} md={4}>\r\n            <CWidgetStatsF\r\n              className=\"mb-3 text-white neumorphic-card\"\r\n              color=\"info\"\r\n              icon={<CIcon icon={cilChartPie} height={24} />}\r\n              title= \"No of LT Connections\" \r\n              // value={metre.filter(item => item.type_of_connection === \"LT\"||(item.type_of_connection === \"LT\"&&item.circle_id)).map(item => item.total)}\r\n\r\n              value={metre.reduce((tot, item) => {\r\n                if (item.type_of_connection === \"LT\"||(item.type_of_connection === \"LT\"&&item.circle_id)) {\r\n                  tot += item.total;\r\n                }\r\n                return tot;\r\n              }, 0)}\r\n              \r\n              \r\n            />\r\n          </CCol>\r\n          <CCol xs={12} sm={6} md={4}>\r\n            <CWidgetStatsF\r\n              className=\"mb-3 text-white neumorphic-card\"\r\n              color=\"success\"\r\n              icon={<CIcon icon={cilChartPie} height={24} />}\r\n              title=\"Mapped\"\r\n              value={metre.reduce((tot, item) => {\r\n                if (item.type_of_connection === \"LT\"||(item.type_of_connection === \"LT\"&&item.circle_id)) {\r\n                  tot += item.mapped;\r\n                }\r\n                return tot;\r\n              }, 0)}\r\n            />\r\n          </CCol>\r\n          <CCol xs={12} sm={6} md={4}>\r\n            <CWidgetStatsF\r\n              className=\"mb-3 text-white neumorphic-card\"\r\n              color=\"danger\"\r\n              icon={<CIcon icon={cilChartPie} height={24} />}\r\n              title=\"Not Mapped\"\r\n              value={metre.reduce((tot, item) => {\r\n                if (item.type_of_connection === \"LT\"||(item.type_of_connection === \"LT\"&&item.circle_id)) {\r\n                  tot += item.not_mapped;\r\n                }\r\n                return tot;\r\n              }, 0)}\r\n            />\r\n          </CCol>\r\n        </CRow>\r\n  \r\n        <h3 className='mt-4'>HT Connection</h3>\r\n        <CRow className=\"neumorphic-row\">\r\n          <CCol xs={12} sm={6} md={4}>\r\n            <CWidgetStatsF\r\n              className=\"mb-3 text-white neumorphic-card\"\r\n              color=\"info\"\r\n              icon={<CIcon icon={cilChartPie} height={24} />}\r\n              title=\"No of HT Connections\"\r\n              value={metre.reduce((tot, item) => {\r\n                if (item.type_of_connection === \"HT\"||(item.type_of_connection === \"HT\"&&item.circle_id)) {\r\n                  tot += item.total;\r\n                }\r\n                return tot;\r\n              }, 0)}\r\n            />\r\n          </CCol>\r\n          <CCol xs={12} sm={6} md={4}>\r\n            <CWidgetStatsF\r\n              className=\"mb-3 text-white neumorphic-card\"\r\n              color=\"success\"\r\n              icon={<CIcon icon={cilChartPie} height={24} />}\r\n              title=\"Mapped\"\r\n              value={metre.reduce((tot, item) => {\r\n                if (item.type_of_connection === \"HT\"||(item.type_of_connection === \"HT\"&&item.circle_id)) {\r\n                  tot += item.mapped;\r\n                }\r\n                return tot;\r\n              }, 0)}\r\n            />\r\n          </CCol>\r\n          <CCol xs={12} sm={6} md={4}>\r\n            <CWidgetStatsF\r\n              className=\"mb-3 text-white neumorphic-card\"\r\n              color=\"danger\"\r\n              icon={<CIcon icon={cilChartPie} height={24} />}\r\n              title=\"Not Mapped\"\r\n              value={metre.reduce((tot, item) => {\r\n                if (item.type_of_connection === \"HT\"||(item.type_of_connection === \"HT\"&&item.circle_id)) {\r\n                  tot += item.not_mapped;\r\n                }\r\n                return tot;\r\n              }, 0)}\r\n            />\r\n          </CCol>\r\n        </CRow>\r\n      </>\r\n    )}\r\n  </div>\r\n  \r\n  );\r\n}\r\n","export const cilChartPie = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M105.361,398.32A195.891,195.891,0,0,1,343.42,91.125L366.676,67.87A227.875,227.875,0,0,0,82.733,420.948,228.027,228.027,0,0,0,366.24,452.1l-23.312-23.312C267.9,472.768,169.657,462.617,105.361,398.32Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M468.916,353.07a243.542,243.542,0,0,0,0-186.459c-.885-2.136-1.806-4.251-2.747-6.354A242.246,242.246,0,0,0,416.11,87.571L404.8,76.257,393.483,87.571,221.213,259.84l172.63,172.631L404.8,443.424,416.11,432.11a242.218,242.218,0,0,0,49.452-71.358C466.716,358.212,467.844,355.657,468.916,353.07ZM404.359,121.95a211.57,211.57,0,0,1,0,275.781L266.468,259.84Z' class='ci-primary'/>\"]"],"names":["Dashboard","metre","setMetre","useState","data","useSelector","state","twad","showMessage","setShowMessage","loading","setLoading","useEffect","timeout","setTimeout","console","log","officeId","office","officeLevelId","requestOptions","method","headers","body","JSON","stringify","fetch","ServiceURL","then","response","json","catch","error","clearTimeout","_jsx","className","children","style","height","CSpinner","color","variant","_jsxs","_Fragment","CRow","CCol","xs","sm","md","CWidgetStatsF","icon","CIcon","cilChartPie","title","value","reduce","tot","item","type_of_connection","circle_id","total","mapped","not_mapped"],"sourceRoot":""}