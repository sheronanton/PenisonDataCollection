{"version":3,"file":"static/js/275.5265403b.chunk.js","mappings":"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","sources":["tneb/DivisionWiseAbstract.js","tneb/Reports.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { use } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport ServiceURL from 'src/config/ServiceURL'\r\nimport CallApi from 'src/util/APICall'\r\nimport Reports from './Reports'\r\n\r\nconst DivisionWiseAbstract = () => {\r\n  const [rowData, setRowData] = React.useState([{}])\r\n  const [secondRowData, setSecondRowData] = React.useState([{}])\r\n  const officeId = useSelector((state) => state.twad.office.officeId)\r\n  const [open, setOpen] = React.useState('N')\r\n  const [pensionerType, setPensionerType] = React.useState('')\r\n  const [status, setStatus] = React.useState('')\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await CallApi.callEndPoint(\r\n          ServiceURL.GetAadhaarStatusAbstractAllOffices,\r\n          {},\r\n        )\r\n\r\n        setRowData(response)\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error)\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  const handleClick = async (\r\n    officeId,\r\n    pensionerTypeId,\r\n    status,\r\n    pensionerType,\r\n  ) => {\r\n    setOpen('Y')\r\n    setPensionerType(pensionerType)\r\n    setStatus(status)\r\n    try {\r\n      const response = await CallApi.callEndPoint(\r\n        ServiceURL.GetAadhaarStatusDetailed,\r\n        {\r\n          paymentOfficeId: officeId,\r\n          pensionerTypeId: pensionerTypeId,\r\n          status: status,\r\n        },\r\n      )\r\n\r\n      setSecondRowData(response)\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h5 className=\"bg-primary text-white text-center p-1 rounded\">\r\n        STATUS REPORT\r\n      </h5>\r\n      {open === 'N' ? (\r\n        <>\r\n          {' '}\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-bordered table-striped rounded\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"bg-info text-white\" rowSpan=\"2\">\r\n                    S.No\r\n                  </th>\r\n                  <th\r\n                    className=\"bg-info text-white\"\r\n                    rowSpan=\"2\"\r\n                    style={{ textAlign: 'center' }}\r\n                  >\r\n                    Payment Office\r\n                  </th>\r\n\r\n                  <th\r\n                    className=\"bg-info text-white\"\r\n                    colSpan=\"2\"\r\n                    style={{ textAlign: 'center' }}\r\n                  >\r\n                    Pensioners\r\n                  </th>\r\n                  <th\r\n                    className=\"bg-info text-white\"\r\n                    colSpan=\"2\"\r\n                    style={{ textAlign: 'center' }}\r\n                  >\r\n                    Family Pensioners\r\n                  </th>\r\n                  <th\r\n                    className=\"bg-info text-white\"\r\n                    colSpan=\"2\"\r\n                    style={{ textAlign: 'center' }}\r\n                  >\r\n                    Total\r\n                  </th>\r\n                </tr>\r\n                <tr>\r\n                  <th className=\"bg-info text-white\">Updated</th>\r\n                  <th className=\"bg-info text-white\">Not Updated</th>\r\n\r\n                  <th className=\"bg-info text-white\">Updated</th>\r\n                  <th className=\"bg-info text-white\">Not Updated</th>\r\n\r\n                  <th className=\"bg-info text-white\">Updated</th>\r\n                  <th className=\"bg-info text-white\">Not Updated</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {rowData.map((item, index) => (\r\n                  <tr key={index}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{item.payment_office_name}</td>\r\n                    <td\r\n                      style={{ textAlign: 'center', cursor: 'pointer' }}\r\n                      onClick={() => {\r\n                        handleClick(\r\n                          item.payment_office_id,\r\n                          'P',\r\n                          'UPDATED',\r\n                          'Pensioner',\r\n                        )\r\n                      }}\r\n                    >\r\n                      {item.pensioners_updated}\r\n                    </td>\r\n                    <td\r\n                      style={{ textAlign: 'center', cursor: 'pointer' }}\r\n                      onClick={() => {\r\n                        handleClick(\r\n                          item.payment_office_id,\r\n                          'P',\r\n                          'NOT_UPDATED',\r\n                          'Pensioner',\r\n                        )\r\n                      }}\r\n                    >\r\n                      {item.pensioners_not_updated}\r\n                    </td>\r\n                    <td\r\n                      style={{ textAlign: 'center', cursor: 'pointer' }}\r\n                      onClick={() => {\r\n                        handleClick(\r\n                          item.payment_office_id,\r\n                          'F',\r\n                          'UPDATED',\r\n                          'Family Pensioner',\r\n                        )\r\n                      }}\r\n                    >\r\n                      {item.family_pensioners_updated}\r\n                    </td>\r\n                    <td\r\n                      style={{ textAlign: 'center', cursor: 'pointer' }}\r\n                      onClick={() => {\r\n                        handleClick(\r\n                          item.payment_office_id,\r\n                          'F',\r\n                          'NOT_UPDATED',\r\n                          'Family Pensioner',\r\n                        )\r\n                      }}\r\n                    >\r\n                      {item.family_pensioners_not_updated}\r\n                    </td>\r\n                    <td style={{ textAlign: 'center' }}>{item.updated}</td>\r\n                    <td style={{ textAlign: 'center' }}>{item.not_updated}</td>\r\n                    {/* <td\r\n                      onClick={() => {\r\n                        handleClick(\r\n                          item.payment_office_id,\r\n                          item.pensioner_type_id,\r\n                          'UPDATED',\r\n                          item.pensioner_type,\r\n                        )\r\n                      }}\r\n                      style={{ cursor: 'pointer', textAlign: 'center' }}\r\n                    >\r\n                      {item.updated}\r\n                    </td>\r\n\r\n                    <td\r\n                      onClick={() => {\r\n                        handleClick(\r\n                          item.payment_office_id,\r\n                          item.pensioner_type_id,\r\n                          'NOT_UPDATED',\r\n                          item.pensioner_type,\r\n                        )\r\n                      }}\r\n                      style={{ cursor: 'pointer', textAlign: 'center' }}\r\n                    >\r\n                      {item.not_updated}\r\n                    </td>\r\n                    <td style={{ cursor: 'pointer', textAlign: 'center' }}>\r\n                      {item.total}\r\n                    </td> */}\r\n                  </tr>\r\n                ))}\r\n\r\n                {/* total row */}\r\n                <tr style={{ fontWeight: 'bold', backgroundColor: '#f0f0f0' }}>\r\n                  <td colSpan={2} style={{ textAlign: 'center' }}>\r\n                    Total\r\n                  </td>\r\n                  <td style={{ textAlign: 'center' }}>\r\n                    {rowData.reduce(\r\n                      (sum, item) => sum + Number(item.pensioners_updated || 0),\r\n                      0,\r\n                    )}\r\n                  </td>\r\n                  <td style={{ textAlign: 'center' }}>\r\n                    {rowData.reduce(\r\n                      (sum, item) =>\r\n                        sum + Number(item.pensioners_not_updated || 0),\r\n                      0,\r\n                    )}\r\n                  </td>\r\n                  <td style={{ textAlign: 'center' }}>\r\n                    {rowData.reduce(\r\n                      (sum, item) =>\r\n                        sum + Number(item.family_pensioners_updated || 0),\r\n                      0,\r\n                    )}\r\n                  </td>\r\n                  <td style={{ textAlign: 'center' }}>\r\n                    {rowData.reduce(\r\n                      (sum, item) =>\r\n                        sum + Number(item.family_pensioners_not_updated || 0),\r\n                      0,\r\n                    )}\r\n                  </td>\r\n                  <td style={{ textAlign: 'center' }}>\r\n                    {rowData.reduce(\r\n                      (sum, item) => sum + Number(item.updated || 0),\r\n                      0,\r\n                    )}\r\n                  </td>\r\n                  <td style={{ textAlign: 'center' }}>\r\n                    {rowData.reduce(\r\n                      (sum, item) => sum + Number(item.not_updated || 0),\r\n                      0,\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          {secondRowData.length > 0 ? (\r\n            <>\r\n              <button\r\n                className=\"btn btn-primary text-white mb-2\"\r\n                onClick={() => {\r\n                  setOpen('N')\r\n                }}\r\n              >\r\n                Back\r\n              </button>\r\n\r\n              <Reports data={secondRowData} fileName=\"report\" />\r\n\r\n              <div className=\"text-center\">\r\n                <span className=\"text-info\">\r\n                  {pensionerType} - {status}\r\n                </span>\r\n              </div>\r\n              <div className=\"table-responsive\">\r\n                <table className=\"table table-bordered table-striped rounded\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"bg-info text-white\">S.No</th>\r\n                      <th className=\"bg-info text-white\">PPO No</th>\r\n                      <th className=\"bg-info text-white\">Name</th>\r\n                      <th className=\"bg-info text-white\">\r\n                        Original Aadhaar No\r\n                      </th>\r\n                      <th className=\"bg-info text-white\">Current Aadhaar No</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {secondRowData.map((item, index) => (\r\n                      <tr key={index}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{item.ppo_no}</td>\r\n                        <td>{item.name}</td>\r\n                        <td>{item.original_aadhaar_no}</td>\r\n                        <td>{item.current_aadhaar_no}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <span className=\"text-info\">No data Found</span> <br />\r\n              <button\r\n                className=\"btn btn-primary text-white mb-2\"\r\n                onClick={() => {\r\n                  setOpen('N')\r\n                }}\r\n              >\r\n                Back\r\n              </button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DivisionWiseAbstract\r\n","import React from 'react'\r\nimport { saveAs } from 'file-saver'\r\nimport * as XLSX from 'xlsx'\r\nimport { CButton } from '@coreui/react'\r\n\r\nconst Reports = ({ data, fileName }) => {\r\n  const exportToExcel = () => {\r\n    const worksheet = XLSX.utils.json_to_sheet(data)\r\n    const workbook = XLSX.utils.book_new()\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Sheet1')\r\n    const excelBuffer = XLSX.write(workbook, {\r\n      bookType: 'xlsx',\r\n      type: 'array',\r\n    })\r\n    const blob = new Blob([excelBuffer], { type: 'application/octet-stream' })\r\n    saveAs(blob, `${fileName}.xlsx`)\r\n  }\r\n\r\n  return (\r\n    // <button onClick={exportToExcel}>Export to Excel</button>\r\n    <CButton onClick={exportToExcel} color=\"warning\" className=\"rounded m-2\">\r\n      Export to Excel\r\n    </CButton>\r\n  )\r\n}\r\n\r\nexport default Reports\r\n"],"names":["DivisionWiseAbstract","rowData","setRowData","React","secondRowData","setSecondRowData","open","setOpen","useSelector","state","twad","office","officeId","pensionerType","setPensionerType","status","setStatus","useEffect","async","response","CallApi","callEndPoint","ServiceURL","error","console","fetchData","handleClick","pensionerTypeId","paymentOfficeId","_jsxs","children","_jsx","className","_Fragment","rowSpan","style","textAlign","colSpan","map","item","index","payment_office_name","cursor","onClick","payment_office_id","pensioners_updated","pensioners_not_updated","family_pensioners_updated","family_pensioners_not_updated","updated","not_updated","fontWeight","backgroundColor","reduce","sum","Number","length","Reports","data","fileName","ppo_no","name","original_aadhaar_no","current_aadhaar_no","_ref","CButton","exportToExcel","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","excelBuffer","bookType","type","blob","Blob","saveAs","concat","color"],"sourceRoot":""}