{"version":3,"file":"static/js/108.9057062f.chunk.js","mappings":"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","sources":["pages/login/Login.js","tneb/dashboard.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CFormInput,\r\n  CInputGroup,\r\n  CInputGroupText,\r\n  CRow,\r\n  CHeader,\r\n  CDropdownMenu,\r\n  CDropdownToggle,\r\n  CDropdownItem,\r\n  CNavLink,\r\n  CHeaderNav,\r\n  CNavItem,\r\n  CHeaderToggler,\r\n  CHeaderBrand,\r\n  CDropdownDivider,\r\n  CCollapse,\r\n  CDropdown,\r\n  CImage\r\n\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { cilLockLocked, cilUser } from '@coreui/icons'\r\nimport { BrowserRouter as Router, Routes, useNavigate, useLocation, Route, Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { decrement, login } from '../../auth/reducers/index'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport LocalStorage from '../../util/localStorage';\r\nimport '../../login.css'\r\nimport axios from 'axios';\r\nimport CallApi from '../../util/APICall'\r\n// import ServiceURL from '../configs/ServiceURL';\r\nimport ServiceURL from '../../config/ServiceURL';\r\n// import { useNavigate } from \"react-router-dom\";\r\nimport dashboard from 'src/tneb/dashboard';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport logo from '../../assets/images/twad_logo.png';\r\nconst Login = () => {\r\n\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { state } = useLocation();\r\n  const dispatch = useDispatch()\r\n  let navigate = useNavigate()\r\n  const [oldPassword, setOldPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [showOldPassword, setShowOldPassword] = useState(false);\r\n  const [showNewPassword, setShowNewPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const [passwordChange, setPasswordChange] = useState(false);\r\n  const [loginClick, setLoginClick] = useState(true);\r\n  const userDetails = useSelector((state) => state.twad)\r\n  // let userData = state;\r\n\r\n  const chk_Login = (e, data) => {\r\n    const userData = {\r\n      userName: userName,\r\n      userPassword: password\r\n    }\r\n    let url = ServiceURL.LoginDetails\r\n    let ip = userData\r\n    let p = CallApi.callEndPoint(url, ip,)\r\n    p.then((result) => {\r\n      // console.log(result.user.isPasswordChanged, \"isPasswordChanged\")\r\n      const successMessage = result.message\r\n      \r\n      NotificationManager.success(successMessage, 'success')\r\n      if (result.user.isPasswordChanged === 0) {\r\n        console.log(\"hh\");\r\n        // navigate('/dashboard ', {})\r\n        // console.log(passwordChange,\"paaaa\");\r\n        setPasswordChange(true)\r\n        setLoginClick(false)\r\n        NotificationManager.info(\"Change Password \",)\r\n      }\r\n      else {\r\n\r\n        navigate('/pension', {})\r\n\r\n      }\r\n\r\n\r\n      dispatch(login({\r\n        userName: result.user.userName, roleId: result.user.roleId, userPassword: result.user.userPassword, employeeName: result.user.employeeName, regionId: result.user.office.regionId, regionName: result.user.office.regionName, circleId: result.user.office.circleId, circleName: result.user.office.circleName, officeId: result.user.office.officeId, officeName: result.user.office.officeName, officeLevelId: result.user.office.officeLevelId, isPassword: result.user.isPasswordChanged\r\n      },))\r\n    }).catch((error) => {\r\n      console.log(error, \"error\");\r\n      const errorMessage = error.response.data.message\r\n      console.log(errorMessage, \"errorMessage\");\r\n      NotificationManager.error(errorMessage, 'error',)\r\n    });\r\n\r\n  }\r\n\r\n  const handleChangeOldPassword = (e) => {\r\n    setOldPassword(e.target.value);\r\n    setError('');\r\n  };\r\n\r\n  const handleToggleShowOldPassword = () => {\r\n    setShowOldPassword(!showOldPassword);\r\n  };\r\n  const handleChangeNewPassword = (e) => {\r\n    setNewPassword(e.target.value);\r\n    setError('');\r\n  };\r\n\r\n  const handleChangeConfirmNewPassword = (e) => {\r\n    setConfirmNewPassword(e.target.value);\r\n    setError('');\r\n  };\r\n\r\n  const handleToggleShowNewPassword = () => {\r\n    setShowNewPassword(!showNewPassword);\r\n  };\r\n\r\n  const handleToggleShowConfirmPassword = () => {\r\n    setShowConfirmPassword(!showConfirmPassword);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (newPassword !== confirmNewPassword) {\r\n      setError('New passwords does not match');\r\n    } else {\r\n      // Passwords match, submit form or perform other actions\r\n      console.log('Old Password:', oldPassword);\r\n      console.log('New Password:', newPassword);\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    //console.log(state)\r\n  });\r\n  const saveChangePassword = (e) => {\r\n    // Check if newPassword and confirmNewPassword are empty\r\n    if (!newPassword || !confirmNewPassword) {\r\n      setError('Please fill in both New Password and Confirm New Password fields');\r\n      return; // Exit the function early if fields are empty\r\n    }\r\n\r\n    // Check if newPassword and confirmNewPassword match\r\n    if (newPassword !== confirmNewPassword) {\r\n      setError('New passwords do not match');\r\n      return; // Exit the function early if passwords don't match\r\n    }\r\n\r\n    // Proceed with password change\r\n    let userName = userDetails.userName;\r\n    // let oldPassword = userDetails.userPassword;\r\n    const userData = {\r\n      userName: userName,\r\n      oldPassword: oldPassword,\r\n      userPassword: newPassword\r\n    };\r\n\r\n    let url = ServiceURL.chagePasswordDetails;\r\n    let ip = userData;\r\n    let p = CallApi.callEndPoint(url, ip);\r\n\r\n    p.then((result) => {\r\n      if (result.message) {\r\n        setPasswordChange(false);\r\n        setLoginClick(true);\r\n        NotificationManager.success(result.message, 'success');\r\n      }\r\n      // Handle success message\r\n      // const successMessage = result.message;\r\n      // NotificationManager.success(successMessage, 'success');\r\n    }).catch((error) => {\r\n      console.log(error.response.data.message, \"erroree\");\r\n      const errorMessage = error.response.data.message;\r\n      console.log(errorMessage, \"errorMessage\");\r\n      NotificationManager.error(errorMessage, 'error');\r\n    });\r\n    setOldPassword(\"\");\r\n    setNewPassword(\"\");\r\n    setConfirmNewPassword(\"\")\r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n      {/* <CHeader> */}\r\n\r\n      <div className='row bg-white'>\r\n        <div className='col-md-2 py-3'>\r\n          <CImage\r\n            className=\"rounded mx-5\"\r\n            src={logo}\r\n            alt=\"slide 3\"\r\n            width={145}\r\n            height={145}\r\n          />\r\n        </div>\r\n        <div className='col-md-8 align-self-center '>\r\n          <h1 className='text-center textColor'>Tamil Nadu Water Supply and Drainage Board (TWAD)</h1>\r\n          <h2 className='text-center text-warning'>TWAD-Pension/FAMILY PENSION Details</h2>\r\n        </div>\r\n      </div>\r\n      {/* </CHeader> */}\r\n      <div className=\"bgcolor\" id='bg-color' >\r\n        {(loginClick &&\r\n          <CContainer >\r\n            <CRow className=\"justify-content-center mt-5\">\r\n              <CCol md={6}>\r\n                <CCardGroup>\r\n                  <CCard className=\"p-4\">\r\n                    <CCardBody>\r\n                      <CForm>\r\n                        <h2>{state} Login</h2>\r\n                        <p className=\"text-medium-emphasis\">Sign In to your account</p>\r\n                        <CInputGroup className=\"mb-3\">\r\n                          <CInputGroupText>\r\n                            <CIcon icon={cilUser} />\r\n                          </CInputGroupText>\r\n                          <CFormInput placeholder=\"Username\" autoComplete=\"username\" value={userName} onChange={(e) => setUserName(e.target.value)} />\r\n                        </CInputGroup>\r\n                        <CInputGroup className=\"mb-4\">\r\n                          <CInputGroupText>\r\n                            <CIcon icon={cilLockLocked} />\r\n                          </CInputGroupText>\r\n                          <CFormInput\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            autoComplete=\"current-password\"\r\n                            value={password} onChange={(e) => setPassword(e.target.value)}\r\n                          />\r\n                        </CInputGroup>\r\n                        <CRow>\r\n                          <CCol xs={6}>\r\n                            <CButton className=\"px-4 login_btn\" onClick={(e) => { chk_Login(e, 'chris') }}>\r\n                              Login\r\n                            </CButton>\r\n                          </CCol>\r\n                          <CCol xs={6} className=\"text-right\">\r\n                            <CButton color=\"\" className=\"px-0 d-none\">\r\n                              Forgot password?\r\n                            </CButton>\r\n                          </CCol>\r\n                        </CRow>\r\n                      </CForm>\r\n                    </CCardBody>\r\n                  </CCard>\r\n\r\n                </CCardGroup>\r\n              </CCol>\r\n            </CRow>\r\n\r\n          </CContainer>\r\n        )}\r\n        {/* <div> */}\r\n        {passwordChange && (\r\n          <CContainer>\r\n            <CRow className=\"justify-content-center mt-5\">\r\n              <CCol md={6}>\r\n                <CCardGroup>\r\n                  <CCard className=\"p-4\">\r\n                    <CCardBody>\r\n                      <CForm onSubmit={handleSubmit}>\r\n                        <h2>{state} Confirm password</h2>\r\n                        <div className=\"mb-3\">\r\n                          <label htmlFor=\"oldPassword\" className=\"form-label\">Old Password:</label>\r\n                          <div className=\"input-group\">\r\n                            <input\r\n                              type={showOldPassword ? \"text\" : \"password\"}\r\n                              className=\"form-control\"\r\n                              id=\"oldPassword\"\r\n                              value={oldPassword}\r\n                              onChange={handleChangeOldPassword}\r\n                            />\r\n                            <button\r\n                              className=\"btn btn-outline-secondary\"\r\n                              type=\"button\"\r\n                              onClick={handleToggleShowOldPassword}\r\n                            >\r\n                              {showOldPassword ? <FaEyeSlash /> : <FaEye />}\r\n                            </button>\r\n                          </div>\r\n                          {/* <p>{userDetails.userPassword}</p> */}\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                          <label htmlFor=\"newPassword\" className=\"form-label\">New Password:</label>\r\n                          <div className=\"input-group\">\r\n                            <input\r\n                              type={showNewPassword ? \"text\" : \"password\"}\r\n                              className=\"form-control\"\r\n                              id=\"newPassword\"\r\n                              value={newPassword}\r\n                              onChange={handleChangeNewPassword}\r\n                            />\r\n                            <button\r\n                              className=\"btn btn-outline-secondary\"\r\n                              type=\"button\"\r\n                              onClick={handleToggleShowNewPassword}\r\n                            >\r\n                              {showNewPassword ? <FaEyeSlash /> : <FaEye />}\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                          <label htmlFor=\"confirmNewPassword\" className=\"form-label\">Confirm New Password:</label>\r\n                          <div className=\"input-group\">\r\n                            <input\r\n                              type={showConfirmPassword ? \"text\" : \"password\"}\r\n                              className=\"form-control\"\r\n                              id=\"confirmNewPassword\"\r\n                              value={confirmNewPassword}\r\n                              onChange={handleChangeConfirmNewPassword}\r\n                            />\r\n                            <button\r\n                              className=\"btn btn-outline-secondary\"\r\n                              type=\"button\"\r\n                              onClick={handleToggleShowConfirmPassword}\r\n                            >\r\n                              {showConfirmPassword ? <FaEyeSlash /> : <FaEye />}\r\n                            </button>\r\n                          </div>\r\n                          {error && <div className=\"invalid-feedback d-block\">{error}</div>}\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                          <button type=\"submit\" className=\"btn btn-primary col-12\" onClick={saveChangePassword}>Change Password</button>\r\n                        </div>\r\n                      </CForm>\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCardGroup>\r\n              </CCol>\r\n            </CRow>\r\n          </CContainer>\r\n        )}\r\n        <NotificationContainer />\r\n\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, } from 'react-redux'\r\nimport {\r\n  CCol,\r\n  CWidgetStatsF,\r\n  CCard,\r\n  CCardBody,\r\n  CCardTitle,\r\n  CCardText,\r\n  CImage,\r\n  CRow,\r\n  CSpinner\r\n} from '@coreui/react';\r\n\r\nimport CIcon from '@coreui/icons-react'\r\nimport { cilChartPie } from '@coreui/icons';\r\nimport ServiceURL from '../config/ServiceURL';\r\nimport '../login.css'\r\nimport icon1 from '../assets/images/icons8-dashboard-48 (1).png'\r\nexport default function Dashboard() {\r\n  const [metre, setMetre] = useState({});\r\n  const data = useSelector((state) => state.twad)\r\n  const [showMessage, setShowMessage] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const timeout = setTimeout(() => {\r\n      setLoading(false);\r\n  }, 2000);\r\n\r\n    console.log(\"refress\");\r\n    const officeId = data.office.officeId || 5000;\r\n    const officeLevelId = data.office.officeLevelId\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ officeId: officeId ,officeLevelId:officeLevelId})\r\n    };\r\n\r\n\r\n    fetch(ServiceURL.meterDetails + \"/status\", requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => setMetre(data))\r\n      .catch(error => console.error('Error fetching data:', error));\r\n  return () => clearTimeout(timeout);\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n    {loading ? (\r\n      <div className=\"d-flex justify-content-center align-items-center\" style={{ height: '100vh' }}>\r\n        <CSpinner color=\"primary\" variant=\"grow\" />\r\n      </div>\r\n    ) : (\r\n      <>\r\n        <h3 className='mt-4'>LT Connection</h3>\r\n        <CRow className=\"neumorphic-row\">\r\n          <CCol xs={12} sm={6} md={4}>\r\n            <CWidgetStatsF\r\n              className=\"mb-3 text-white neumorphic-card\"\r\n              color=\"info\"\r\n              icon={<CIcon icon={cilChartPie} height={24} />}\r\n              title= \"No of LT Connections\" \r\n              // value={metre.filter(item => item.type_of_connection === \"LT\"||(item.type_of_connection === \"LT\"&&item.circle_id)).map(item => item.total)}\r\n\r\n              value={metre.reduce((tot, item) => {\r\n                if (item.type_of_connection === \"LT\"||(item.type_of_connection === \"LT\"&&item.circle_id)) {\r\n                  tot += item.total;\r\n                }\r\n                return tot;\r\n              }, 0)}\r\n              \r\n              \r\n            />\r\n          </CCol>\r\n          <CCol xs={12} sm={6} md={4}>\r\n            <CWidgetStatsF\r\n              className=\"mb-3 text-white neumorphic-card\"\r\n              color=\"success\"\r\n              icon={<CIcon icon={cilChartPie} height={24} />}\r\n              title=\"Mapped\"\r\n              value={metre.reduce((tot, item) => {\r\n                if (item.type_of_connection === \"LT\"||(item.type_of_connection === \"LT\"&&item.circle_id)) {\r\n                  tot += item.mapped;\r\n                }\r\n                return tot;\r\n              }, 0)}\r\n            />\r\n          </CCol>\r\n          <CCol xs={12} sm={6} md={4}>\r\n            <CWidgetStatsF\r\n              className=\"mb-3 text-white neumorphic-card\"\r\n              color=\"danger\"\r\n              icon={<CIcon icon={cilChartPie} height={24} />}\r\n              title=\"Not Mapped\"\r\n              value={metre.reduce((tot, item) => {\r\n                if (item.type_of_connection === \"LT\"||(item.type_of_connection === \"LT\"&&item.circle_id)) {\r\n                  tot += item.not_mapped;\r\n                }\r\n                return tot;\r\n              }, 0)}\r\n            />\r\n          </CCol>\r\n        </CRow>\r\n  \r\n        <h3 className='mt-4'>HT Connection</h3>\r\n        <CRow className=\"neumorphic-row\">\r\n          <CCol xs={12} sm={6} md={4}>\r\n            <CWidgetStatsF\r\n              className=\"mb-3 text-white neumorphic-card\"\r\n              color=\"info\"\r\n              icon={<CIcon icon={cilChartPie} height={24} />}\r\n              title=\"No of HT Connections\"\r\n              value={metre.reduce((tot, item) => {\r\n                if (item.type_of_connection === \"HT\"||(item.type_of_connection === \"HT\"&&item.circle_id)) {\r\n                  tot += item.total;\r\n                }\r\n                return tot;\r\n              }, 0)}\r\n            />\r\n          </CCol>\r\n          <CCol xs={12} sm={6} md={4}>\r\n            <CWidgetStatsF\r\n              className=\"mb-3 text-white neumorphic-card\"\r\n              color=\"success\"\r\n              icon={<CIcon icon={cilChartPie} height={24} />}\r\n              title=\"Mapped\"\r\n              value={metre.reduce((tot, item) => {\r\n                if (item.type_of_connection === \"HT\"||(item.type_of_connection === \"HT\"&&item.circle_id)) {\r\n                  tot += item.mapped;\r\n                }\r\n                return tot;\r\n              }, 0)}\r\n            />\r\n          </CCol>\r\n          <CCol xs={12} sm={6} md={4}>\r\n            <CWidgetStatsF\r\n              className=\"mb-3 text-white neumorphic-card\"\r\n              color=\"danger\"\r\n              icon={<CIcon icon={cilChartPie} height={24} />}\r\n              title=\"Not Mapped\"\r\n              value={metre.reduce((tot, item) => {\r\n                if (item.type_of_connection === \"HT\"||(item.type_of_connection === \"HT\"&&item.circle_id)) {\r\n                  tot += item.not_mapped;\r\n                }\r\n                return tot;\r\n              }, 0)}\r\n            />\r\n          </CCol>\r\n        </CRow>\r\n      </>\r\n    )}\r\n  </div>\r\n  \r\n  );\r\n}\r\n"],"names":["Login","userName","setUserName","useState","password","setPassword","state","useLocation","dispatch","useDispatch","navigate","useNavigate","oldPassword","setOldPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","error","setError","showOldPassword","setShowOldPassword","showNewPassword","setShowNewPassword","showConfirmPassword","setShowConfirmPassword","passwordChange","setPasswordChange","loginClick","setLoginClick","userDetails","useSelector","twad","useEffect","_jsxs","children","className","_jsx","CImage","src","logo","alt","width","height","id","CContainer","CRow","CCol","md","CCardGroup","CCard","CCardBody","CForm","CInputGroup","CInputGroupText","CIcon","icon","cilUser","CFormInput","placeholder","autoComplete","value","onChange","e","target","cilLockLocked","type","xs","CButton","onClick","chk_Login","userData","userPassword","url","ServiceURL","ip","CallApi","callEndPoint","then","result","successMessage","message","NotificationManager","success","user","isPasswordChanged","console","log","info","login","roleId","employeeName","regionId","office","regionName","circleId","circleName","officeId","officeName","officeLevelId","isPassword","catch","errorMessage","response","data","color","onSubmit","preventDefault","htmlFor","handleToggleShowOldPassword","FaEyeSlash","FaEye","handleToggleShowNewPassword","handleToggleShowConfirmPassword","NotificationContainer","Dashboard","metre","setMetre","showMessage","setShowMessage","loading","setLoading","timeout","setTimeout","requestOptions","method","headers","body","JSON","stringify","fetch","json","clearTimeout","style","CSpinner","variant","_Fragment","sm","CWidgetStatsF","cilChartPie","title","reduce","tot","item","type_of_connection","circle_id","total","mapped","not_mapped"],"sourceRoot":""}